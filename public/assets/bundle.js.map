{"version":3,"file":"bundle.js","sources":["../../src/mjs/helpers/utils.mjs","../../src/mjs/helpers/event-manager.mjs","../../src/mjs/helpers/storage/datastore.mjs","../../src/mjs/helpers/storage/webstorage.mjs","../../src/mjs/components/dialog.mjs","../../src/mjs/components/rangeslider.mjs","../../src/mjs/components/themeselector.mjs","../../src/mjs/components/settings.mjs","../../src/mjs/helpers/dataset.mjs","../../src/mjs/components/icon.mjs","../../src/mjs/components/card.mjs","../../src/mjs/components/deck.mjs","../../src/mjs/components/timer.mjs","../../src/mjs/components/stats.mjs","../../src/mjs/components/game.mjs","../../src/mjs/index.mjs"],"sourcesContent":["/* global unsafeWindow, globalThis */\n\n\nconst global = typeof unsafeWindow !== 'undefined' ? unsafeWindow : (typeof globalThis !== 'undefined' ? globalThis : window);\nconst { document, JSON } = global;\nconst RE_NUMERIC = /^-?(?:[\\d]+\\.)?\\d+$/;\n\nexport const\n    isPlainObject = (param) => param instanceof Object && Object.getPrototypeOf(param) === Object.prototype,\n    isUndef = (param) => typeof param === 'undefined',\n    isString = (param) => typeof param === 'string',\n    isNumber = (param) => typeof param === 'number',\n    isInt = (param) => Number.isInteger(param),\n    isFloat = (param) => isNumber(param) && parseFloat(param) === param,\n    isUnsigned = (param) => param >= 0 && isNumber(param),\n    isUnsignedInt = (param) => param >= 0 && isInt(param),\n    isNumeric = (param) => isInt(param) || isFloat(param) || RE_NUMERIC.test(param),\n    intVal = (param) => isNumeric(param) && parseInt(param),\n    floatVal = (param) => isNumeric(param) && parseFloat(param),\n    isBool = (param) => typeof param === 'boolean',\n    isArray = (param) => Array.isArray(param),\n    isNull = (param) => param === null,\n    isObject = (param) => typeof param === 'object' && !isNull(param),\n    isCallable = (param) => typeof param === 'function',\n    isFunction = isCallable,\n    isScalar = (param) => isNumeric(param) || isString(param) || isBool(param),\n    capitalize = (param) => isString(param) && param.split(/\\s+/).map(param => param.charAt(0).toUpperCase() + param.slice(1).toLowerCase()).join(' ');\n\nconst\n    VALID_REFERERRPOLICY = [\n        'no-referrer', 'no-referrer-when-downgrade',\n        'origin', 'origin-when-cross-origin',\n        'same-origin', 'strict-origin',\n        'strict-origin-when-cross-origin', 'unsafe-url'\n    ],\n    VALID_CROSSORIGIN = ['', 'use-credentials', 'anonymous'];\nexport function isEmpty(param) {\n\n    if (isUndef(param) || param === null) {\n        return true;\n    }\n    if (isString(param) || isArray(param)) {\n        return param.length === 0;\n    }\n    if (isNumber(param)) {\n        return param === 0;\n    }\n\n    if (isPlainObject(param)) {\n        return Object.keys(param).length === 0;\n    }\n    return false;\n}\n\nexport function runAsync(callback, ...args) {\n    if (isFunction(callback)) {\n        setTimeout(() => {\n            callback(...args);\n        }, 0);\n    }\n}\nexport function isValidSelector(selector) {\n\n    try {\n        return isString(selector) && null === document.createElement('template').querySelector(selector);\n\n    } catch (e) {\n        return false;\n    }\n\n}\n\n\nexport function uuidv4() {\n    let uuid = \"\", i, random;\n    for (i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0;\n        if (i == 8 || i == 12 || i == 16 || i == 20) {\n            uuid += \"-\"\n        }\n        uuid += (i == 12 ? 4 : (i == 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return uuid;\n}\n\n\nexport function isElement(elem) {\n    return elem instanceof Object && isFunction(elem.querySelector);\n}\n\nfunction toDashed(name) {\n    return name.replace(/([A-Z])/g, function (u) {\n        return \"-\" + u.toLowerCase();\n    });\n}\n\nfunction isHTML(param) {\n    return isString(param) && param.startsWith('<') && param.endsWith('>');\n}\n\n\nexport function decode(value) {\n\n    if (isUndef(value) || isNull(value) || value === '') {\n        return null;\n    }\n    if (\n        (value.startsWith('{') && value.endsWith('}')) ||\n        (value.startsWith('[') && value.endsWith(']')) ||\n        isNumeric(value) || value === 'true' || value === 'false'\n    ) {\n        return JSON.parse(value);\n    }\n\n    return value;\n}\n\n\nexport function encode(value) {\n\n    if (!isString(value)) {\n        return JSON.stringify(value);\n    }\n    return value;\n}\n\n\n\n\n\n\nfunction parseDataElement(data, root = true) {\n\n    let result = [];\n\n    data ??= {};\n\n    for (let key in data) {\n\n        let value = data[key];\n\n        if (isPlainObject(value)) {\n            result = result.concat(parseDataElement(value, false).map(\n                item => [key + '-' + item[0], item[1]]\n            ));\n            continue;\n        }\n        result.push([key, encode(value)]);\n    }\n    return result.map(item => root ? ['data-' + item[0], item[1]] : item);\n}\n\n\n\n/**\n * Creates an Element\n *\n * @param {string} tagName\n * @param {Object} [params]\n * @param {string|HTMLElement|string[]|HTMLElement[]} [html]\n * @returns {HTMLElement}\n */\nexport function createElement(tag, params = null, html = '') {\n\n    if (typeof tag !== 'string') {\n        throw new TypeError('tag must be a String');\n    }\n\n    if (\n        typeof params === 'string' ||\n        params instanceof Element ||\n        isArray(params)\n    ) {\n        html = params;\n        params = {};\n    }\n\n    params ??= {};\n    html ??= '';\n\n\n    const elem = isHTML(tag) ? html2element(tag) : document.createElement(tag);\n\n    for (let attr in params) {\n        let value = params[attr];\n        if (attr === 'html') {\n            html = value;\n            continue;\n        }\n        if (attr === 'data') {\n            if (isPlainObject(value)) {\n                parseDataElement(value).forEach(item => {\n                    const [key, value] = item;\n                    elem.setAttribute(key, value);\n                });\n            }\n            continue;\n        }\n\n        if (typeof value === 'string') {\n            elem.setAttribute(attr, value);\n        }\n        else {\n            elem[attr] = value;\n        }\n    }\n\n    if (html instanceof Element || isString(html)) {\n        html = [html];\n    }\n\n    if (Array.isArray(html)) {\n\n        html.forEach(item => {\n            if (item instanceof Element) {\n                elem.appendChild(item);\n            } else if (typeof item === 'string') {\n                elem.innerHTML += item;\n            }\n        });\n    }\n    return elem;\n}\n\n\n/**\n * Generate a unique ID\n * @returns {String}\n */\nexport function uniqid() {\n\n    let value;\n    uniqid.values ??= [];\n\n    while (!value || uniqid.values.includes(value)) {\n        value = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    }\n    uniqid.values.push(value);\n    return value;\n}\n\n/**\n * Clones an Object\n * @param {Object} obj\n * @returns {Object|undefined}\n */\nexport function clone(obj) {\n    if (obj instanceof Object) {\n        return Object.assign({}, obj);\n    }\n\n    return obj;\n}\n\n/**\n * Clones Object recursively\n * \n * @param {Object} obj \n * @returns \n */\nexport function cloneRecursive(obj) {\n    if (obj instanceof Object) {\n\n        if (isArray(obj)) {\n\n            return Array.from(obj).map(value => {\n                if (isPlainObject(value) || isArray(value)) {\n                    return cloneRecursive(value);\n                }\n                return value;\n            });\n        }\n\n        if (!isPlainObject(obj)) {\n            throw new TypeError('Invalid Object supplied.');\n        }\n\n        obj = clone(obj);\n        for (let prop in obj) {\n            if (isPlainObject(obj[prop]) || isArray(obj[prop])) {\n                obj[prop] = cloneRecursive(obj[prop]);\n            }\n        }\n\n    }\n\n    return obj;\n}\n\n/**\n * Creates a Document from html code\n * @param {string} html\n * @returns {documentElement}\n */\nexport function html2doc(html) {\n    let node = document.implementation.createHTMLDocument().documentElement;\n    if (isString(html) && html.length > 0) {\n        node.innerHTML = html;\n    }\n    return node;\n}\n\n/**\n * Creates an HTMLElement from html code\n * @param {string} html\n * @returns {HTMLElement|Array|undefined}\n */\nexport function html2element(html) {\n    if (isString(html) && html.length > 0) {\n        let template = createElement('template', html),\n            content = template.content;\n        if (content.childNodes.length === 0) {\n            return;\n        }\n        else if (content.childNodes.length > 1) {\n            return [...content.childNodes];\n        }\n        return content.childNodes[0];\n    }\n}\nexport function getUrl(url) {\n\n    if (url instanceof URL || isString(url)) {\n        let a = createElement('a');\n        a.href = url;\n        return a.href;\n    }\n}\n\nexport function loadScript(url, options) {\n    return new Promise(resolve => {\n        const params = Object.assign({\n            async: null,\n            defer: null,\n            crossorigin: null,\n            referrerpolicy: null,\n            type: null,\n        }, options ?? {});\n\n        let { async, defer, crossorigin, referrerpolicy, type } = params;\n\n        if (async !== true) {\n            async = null;\n        }\n\n        if (defer !== true) {\n            defer = null;\n        }\n\n        if (VALID_CROSSORIGIN.includes(crossorigin)) {\n            crossorigin = null;\n        }\n        if (VALID_REFERERRPOLICY.includes(referrerpolicy)) {\n            referrerpolicy = null;\n        }\n        if (type !== 'module') {\n            type = null;\n        }\n\n        if (url = getUrl(url)) {\n\n            const script = createElement('script', { src: url, onload: () => resolve(script), id: uniqid() });\n\n            for (let param in params) {\n                let value = params[param];\n                if (null !== value) {\n                    script[param] = value;\n                }\n            }\n\n            document.getElementsByTagName('head')[0].appendChild(script);\n        }\n\n    });\n}\n\n\nexport {\n    JSON,\n    global,\n    document,\n};\n","/**\n * A small Event manager that does not uses DOM\n */\n\n\nimport { isFunction, isString, runAsync } from \"./utils.mjs\";\n\n\n\n\nexport class EventManager {\n\n    #listeners\n    #useasync\n\n    static #events\n\n    constructor(useasync = true) {\n        this.#listeners = [];\n        this.#useasync = useasync;\n    }\n\n\n    getListenersForEvent(type) {\n\n        if (!isString(type) || type.includes(' ')) {\n            throw new TypeError('Invalid event type, not a String or contains spaces.');\n        }\n\n        return this.#listeners.filter(item => item.type === type).map(item => item.listener);\n    }\n\n\n    on(type, listener, once = false) {\n\n        if (!isString(type)) {\n            throw new TypeError('Invalid event type, not a String.');\n        }\n\n        if (!isFunction(listener)) {\n            throw new TypeError('Invalid listener, not a function');\n        }\n\n\n\n        type.split(/\\s+/).forEach(type => {\n            this.#listeners.push({\n                type, listener, once: once === true\n            });\n        });\n\n        return this;\n    }\n\n\n    one(type, listener) {\n        return this.on(type, listener, true);\n    }\n\n\n    off(type, listener) {\n\n        if (!isString(type)) {\n            throw new TypeError('Invalid event type, not a String.');\n        }\n\n        type.split(/\\s+/).forEach(type => {\n\n            this.#listeners = this.#listeners.filter(item => {\n                if (type === item.type) {\n                    if (listener === item.listener || !listener) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        });\n\n\n        return this;\n    }\n\n\n    trigger(type, data = null) {\n\n        let event;\n\n        if (type instanceof Event) {\n            event = type;\n            event.data ??= data;\n            type = event.type;\n        }\n\n        if (!isString(type) && type instanceof Event === false) {\n            throw new TypeError('Invalid event type, not a String|Event.');\n        }\n\n\n        const listeners = Array.from(this.#listeners), types = [];\n\n        type.split(/\\s+/).forEach(type => {\n\n            if (types.includes(type)) {\n                return;\n            }\n\n            types.push(type);\n\n            for (let item of listeners) {\n\n                if (item.type === type) {\n\n                    if (this.#useasync) {\n                        runAsync(item.listener, event ?? { type, data });\n\n                    } else {\n                        item.listener(event ?? { type, data });\n                    }\n\n                    if (item.once) {\n                        this.off(type, item.listener)\n                    }\n                }\n            }\n\n\n        });\n\n        return this;\n\n\n    }\n\n\n    mixin(binding) {\n\n        if (binding instanceof Object) {\n            ['on', 'off', 'one', 'trigger'].forEach(method => {\n                Object.defineProperty(binding, method, {\n                    enumerable: false, configurable: true,\n                    value: (...args) => {\n                        this[method](...args);\n                        return binding;\n                    }\n                });\n            });\n\n        }\n\n        return this;\n    }\n\n\n    static mixin(binding, useasync = true) {\n        return (new EventManager(useasync)).mixin(binding);\n    }\n\n\n    static on(type, listener, once = false) {\n        this.#events ??= new EventManager();\n        return this.#events.on(type, listener, once);\n    }\n\n    static one(type, listener) {\n        this.#events ??= new EventManager();\n        return this.#events.one(type, listener);\n    }\n\n    static off(type, listener) {\n        this.#events ??= new EventManager();\n        return this.#events.off(type, listener);\n    }\n\n    static trigger(type, data = null) {\n        this.#events ??= new EventManager();\n        return this.#events.trigger(type, data);\n    }\n\n}\n\n\nexport default EventManager\n\n","import { isPlainObject, isEmpty } from '../utils.mjs';\n\n\n\n/**\n * The default DataStore interface\n */\nexport class DataStore {\n\n\n    key(name) {\n        return name;\n    }\n\n\n    has(name) {\n        return this.get(name, null) !== null;\n    }\n\n    multiset(values) {\n\n        if (!isPlainObject(values) || isEmpty(values)) {\n            throw new TypeError('values is not a non empty Object');\n        }\n\n        for (let name in values) {\n            let value = values[name];\n            this.set(name, value);\n        }\n    }\n\n    remove(name) {\n        this.set(name, null);\n    }\n\n    set(name, value) {\n        throw new Error('set() not implemented');\n    }\n\n    get(name, defaultValue = null) {\n        throw new Error('get() not implemented');\n    }\n\n\n    clear() {\n        throw new Error('clear() not implemented');\n    }\n\n\n}\n\n/**\n * Convert A DatasTore instance into Async\n * This is just a decorator to keep compatibility\n */\nexport class AsyncDataStore {\n\n\n    #datastore\n\n    constructor(datatore) {\n\n\n        if (datatore instanceof DataStore === false) {\n\n            throw new TypeError('Invalid DataStore.')\n\n        }\n\n        this.#datastore = datatore;\n    }\n\n\n    async key(name) {\n        return this.#datastore.key(name);\n    }\n\n    async has(name) {\n        return this.#datastore.has(name);\n    }\n\n    async multiset(values) {\n        this.#datastore.multiset(values);\n        return values;\n    }\n\n\n\n    async remove(name) {\n        this.#datastore.remove(name);\n        return { name, value: null };\n    }\n\n    async set(name, value) {\n\n        this.#datastore.set(name, value);\n        return { name, value };\n    }\n\n    async get(name, defaultValue = null) {\n        return this.#datastore.get(name, defaultValue);\n    }\n\n\n    async clear() {\n        this.#datastore.clear();\n\n        return true;\n    }\n\n\n}\n\n\n\nexport default DataStore;","import DataStore from './datastore.mjs';\nimport { isString, isEmpty, isUndef, JSON, uuidv4, isNull } from '../utils.mjs';\n\n\nexport class WebStorage extends DataStore {\n\n    #storage\n    #prefix\n\n    #generatePrefix() {\n\n        let\n            key = 'NGSOFT:WebStorage:UUID',\n            result = localStorage.getItem(key);\n\n        if (isNull(result)) {\n            localStorage.setItem(key, result = uuidv4());\n        }\n        return result;\n    }\n\n    constructor(webstorage, prefix) {\n        super();\n\n        webstorage ??= sessionStorage;\n\n        if (![localStorage, sessionStorage].includes(webstorage)) {\n            throw new TypeError('webstorage not an instance of Storage');\n        }\n\n        this.#storage = webstorage;\n        prefix ??= this.#generatePrefix();\n\n        if (!isEmpty(prefix) && !prefix.endsWith(':')) {\n            prefix += ':';\n        }\n\n        this.#prefix = prefix;\n    }\n\n\n    key(name) {\n        return this.#prefix + name;\n    }\n\n\n    get(name, defaultValue = null) {\n\n        if (!isString(name) || isEmpty(name)) {\n            throw new TypeError('name is not a non empty string');\n        }\n\n\n        let value = this.#storage.getItem(this.key(name));\n\n        if (!isString(value)) {\n            return defaultValue;\n        }\n\n        return JSON.parse(value);\n    }\n\n\n    set(name, value) {\n        if (!isString(name) || isEmpty(name)) {\n            throw new TypeError('name is not a non empty string');\n        }\n\n        if (isUndef(value)) {\n            throw new TypeError('value is undefined');\n        }\n\n\n        if (value === null) {\n            this.#storage.removeItem(this.key(name));\n        } else {\n            this.#storage.setItem(this.key(name), JSON.stringify(value));\n        }\n    }\n\n    clear() {\n\n        let prefix = this.#prefix, store = this.#storage;\n        for (let i = 0; i < store.length; i++) {\n            let name = store.key(i);\n            if (name.indexOf(prefix) === 0 || isEmpty(prefix)) {\n                name = name.substring(prefix.length);\n                this.remove(name);\n            }\n\n        }\n    }\n\n\n}\n\n\nexport const SessionStore = new WebStorage(sessionStorage), LocalStore = new WebStorage(localStorage);\n\nexport default WebStorage;\n\n\n\n","import { createElement, isArray, isFunction, isPlainObject, isString, uniqid } from \"../helpers/utils.mjs\";\n\n\n\nconst\n    { Modal } = bootstrap,\n    defaults = {\n        title: document.title,\n        body: ''\n    };\n\n\nfunction innerHTML(elem, html) {\n\n    if (elem instanceof Element) {\n        if (isString(html) || html instanceof Element) {\n            html = [html];\n        }\n\n        if (isArray(html)) {\n            elem.innerHTML = '';\n\n            html.forEach(item => {\n                if (isString(item)) {\n                    elem.innerHTML += item;\n                } else if (item instanceof Element) {\n                    elem.appendChild(item);\n                }\n            });\n\n\n        }\n    }\n\n\n\n    return elem;\n}\n\n\n\nexport class Dialog {\n\n    elements\n\n    element\n\n    #modal\n\n    get modal() {\n        return this.#modal;\n    }\n\n    get title() {\n        return this.elements.title.innerHTML;\n    }\n\n    set title(title) {\n        if (isString(title)) {\n            this.elements.title.innerHTML = title;\n        }\n    }\n\n    get body() {\n        return this.elements.body;\n    }\n\n    set body(body) {\n        innerHTML(this.elements.body, body);\n    }\n\n    constructor(id, params) {\n\n\n        params = Object.assign({}, defaults, isPlainObject(params) ? params : {});\n\n        id ??= uniqid();\n\n        let\n            titleText = params.title,\n            bodyContents = params.body;\n\n        const\n            title = createElement(`<h1 class=\"modal-title fs-5\" id=\"${id}Label\"/>`, titleText),\n            header = createElement('<div class=\"modal-header\"/>', [\n                title,\n                '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>'\n            ]),\n\n            body = createElement('<div class=\"modal-body\"/>', [\n                bodyContents\n            ]),\n\n            cancelBtn = createElement('<button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\"/>', 'Annuler'),\n            saveBtn = createElement('<button type=\"button\" class=\"btn btn-primary\"/>', {\n                onclick: (e) => {\n                    e.preventDefault();\n                    this.onHidden(() => {\n                        e.target.dispatchEvent(new Event('save.bs.modal', { bubbles: true }));\n                    });\n                    modal.hide();\n                }\n            }, 'Sauvegarder'),\n            footer = createElement('<div class=\"modal-footer\"/>', [\n                cancelBtn,\n                saveBtn\n            ]),\n\n            content = createElement('<div class=\"modal-content\"/>', [\n                header,\n                body,\n                footer\n            ]),\n            dialog = createElement('<div class=\"modal-dialog modal-dialog-centered modal-fullscreen-md-down user-select-none\"/>', content),\n            root = createElement(`<div class=\"modal fade\" id=\"${id}\" tabindex=\"-1\" aria-labelledby=\"${id}Label\" aria-hidden=\"true\"/>`, dialog),\n            modal = new Modal(root);\n\n        this.#modal = modal;\n        this.elements = {\n            root,\n            dialog,\n            content,\n            header,\n            title,\n            body,\n            footer,\n            cancelBtn,\n            saveBtn\n        };\n        this.element = root;\n\n\n    }\n\n\n\n    hide(...args) {\n        return this.#modal.hide(...args);\n    }\n\n    show(...args) {\n        return this.#modal.show(...args);\n    }\n\n    toggle(...args) {\n        return this.#modal.toggle(...args);\n    }\n\n\n    #addEventListener(listener, type) {\n        if (isFunction(listener)) {\n            this.elements.root.addEventListener(type, listener);\n        }\n    }\n\n    onHide(listener) {\n        this.#addEventListener(listener, 'hide.bs.modal');\n    }\n\n    onHidden(listener) {\n        this.#addEventListener(listener, 'hidden.bs.modal');\n    }\n\n    onShow(listener) {\n        this.#addEventListener(listener, 'show.bs.modal');\n    }\n\n    onShown(listener) {\n        this.#addEventListener(listener, 'shown.bs.modal');\n    }\n\n    onSave(listener) {\n        this.#addEventListener(listener, 'save.bs.modal');\n    }\n\n\n}\n\n\n\nexport default Dialog;","\nimport EventManager from \"../helpers/event-manager.mjs\";\nimport { createElement, isInt, isPlainObject, isString, uniqid } from \"../helpers/utils.mjs\";\n\n\nexport class RangeSlider {\n    elements\n    element\n\n    get id() {\n        return this.elements.input.id;\n    }\n\n\n    get label() {\n        return this.elements.label.innerHTML;\n    }\n\n    set label(label) {\n        if (isString(label)) {\n            this.elements.label.innerHTML = label;\n        }\n    }\n\n    get value() {\n        return JSON.parse(this.elements.input.value);\n    }\n\n    set value(value) {\n        if (isInt(value)) {\n            value = JSON.stringify(value);\n        }\n\n        if (/^\\d+$/.test(value)) {\n            this.elements.input.value = value;\n            this.elements.input.dispatchEvent(new Event('change', { bubbles: true }));\n        }\n    }\n\n\n\n    get inputLabel() {\n        return this.elements.inputLabel.innerHTML;\n    }\n\n\n    set inputLabel(label) {\n        this.elements.inputLabel.innerHTML = label;\n    }\n\n\n    get inputLabelAfter() {\n        return this.elements.inputLabel.dataset.after;\n    }\n\n\n    set inputLabelAfter(after) {\n        this.elements.inputLabel.dataset.after = after;\n    }\n\n\n    constructor(id, params) {\n        const defaults = {\n            label: '',\n            min: 0,\n            max: 1,\n            step: 1,\n            value: 0,\n            after: ''\n\n        };\n\n        id ??= uniqid();\n        params = Object.assign({}, defaults, isPlainObject(params) ? params : {});\n\n        EventManager.mixin(this);\n\n        const\n\n            label = createElement(`<label for=\"${id}\" class=\"form-label\" />`, params.label),\n\n            input = createElement('input', {\n                type: 'range',\n                class: 'form-range',\n                min: params.min,\n                max: params.max,\n                step: params.step,\n                value: params.value,\n                id,\n                name: id,\n                after: ''\n            }),\n            inputLabel = createElement('<span class=\"input-label ms-auto\"/>', {\n                'data-after': params.after\n            },\n                '' + input.value\n            ),\n\n            inputContainer = createElement('<div class=\"d-flex\"/>', [\n                createElement('<div class=\"col-9\"/>', input),\n                inputLabel\n            ]),\n\n            root = createElement('<div class=\"row flex-column mb-3\"/>', {\n                id: id + 'FormElement'\n            }, [\n                label,\n                inputContainer\n            ]);\n\n\n        this.elements = {\n            root,\n            label,\n            input,\n            inputLabel\n        };\n\n        this.element = root;\n\n\n        input.addEventListener('change', () => {\n            inputLabel.innerHTML = input.value;\n            this.trigger('change', { value: this.value, slider: this });\n        });\n\n\n\n    }\n}\n\n\nexport default RangeSlider;","import { createElement, decode, encode, isArray } from \"../helpers/utils.mjs\";\n\n\n\nclass RadioElement {\n\n\n    element\n    elements\n\n\n    get value() {\n        return decode(this.elements.input.value)\n    }\n\n    get name() {\n        return this.elements.input.getAttribute('name');\n    }\n\n    get id() {\n        return this.elements.input.getAttribute('id');\n    }\n\n    get checked() {\n        return this.elements.input.checked === true;\n    }\n    set checked(checked) {\n        this.elements.input.checked = checked === true;\n    }\n    constructor(id, name, value) {\n\n\n        const\n\n            label = createElement('label', { for: id }),\n            input = createElement('<input type=\"radio\">', {\n                id, name, value: encode(value)\n            }),\n            root = createElement('span', {\n                class: \"color-picker d-inline-block mx-3\"\n            }, [\n                input,\n                label\n            ]);\n\n\n\n        this.elements = {\n            root, label, input\n        };\n\n        this.element = root;\n    }\n\n}\n\n\nexport class ThemeSelector {\n\n\n    elements\n\n    element\n\n    get value() {\n        for (let theme of this.elements) {\n            if (theme.checked) {\n                return theme.value;\n            }\n        }\n\n        return null;\n    }\n\n    constructor(themes, value) {\n        if (!isArray(themes)) {\n            throw new TypeError('themes must be an Array');\n        }\n\n        themes = themes.map(value => new RadioElement('theme' + value, 'theme', value));\n\n        const\n            root = createElement('div', {\n                class: 'theme-selector',\n                id: 'themeFormElement'\n            }, [\n                createElement('<div class=\"form-label\"/>', 'Theme'),\n                createElement('<div class=\"d-flex\">', themes.map(t => t.element))\n            ]);\n\n        this.elements = themes;\n        this.element = root;\n\n\n        themes.forEach(theme => {\n            if (theme.value === value) {\n                theme.checked = true;\n            }\n        });\n    }\n\n}\n\n\nexport default ThemeSelector;","import EventManager from \"../helpers/event-manager.mjs\";\nimport { LocalStore } from \"../helpers/storage/webstorage.mjs\";\nimport { createElement } from \"../helpers/utils.mjs\";\nimport Dialog from \"./dialog.mjs\";\nimport RangeSlider from \"./rangeslider.mjs\";\nimport ThemeSelector from \"./themeselector.mjs\";\n\n\nconst defaults = {\n    difficulty: 4,\n    timeout: 0,\n    lives: 0,\n    matched: 1\n}, keys = Object.keys(defaults);\n\nexport class Settings {\n\n\n    static get difficulty() {\n\n\n        return LocalStore.get('difficulty', defaults.difficulty);\n\n    }\n\n    static set difficulty(difficulty) {\n        LocalStore.set('difficulty', difficulty);\n    }\n\n\n    static get timeout() {\n        return LocalStore.get('timeout', defaults.timeout);\n    }\n\n    static set timeout(timeout) {\n        LocalStore.set('timeout', timeout);\n    }\n\n    static get lives() {\n        return LocalStore.get('lives', defaults.lives);\n    }\n\n    static set lives(lives) {\n        LocalStore.set('lives', lives);\n    }\n    static get matched() {\n        return LocalStore.get('matched', defaults.matched);\n    }\n\n    static set matched(matched) {\n        LocalStore.set('matched', matched);\n    }\n\n\n    static get theme() {\n        return LocalStore.get('theme', -1);\n    }\n\n    static set theme(theme) {\n        return LocalStore.set('theme', theme);\n    }\n\n\n\n    static get settings() {\n\n        const result = {};\n\n        for (let key in defaults) {\n\n            result[key] = this[key];\n        }\n\n        return result;\n\n    }\n\n\n}\n\n\n\n\n\n\nexport class DialogSettings {\n\n    element\n    dialog\n\n    constructor() {\n\n        const dialog = this.dialog = new Dialog('settings', {\n            title: 'Réglages'\n        });\n\n        EventManager.mixin(this);\n\n\n        //build form\n\n        const\n\n            difficultyRange = new RangeSlider('difficulty', {\n                label: 'Difficulté',\n                min: 2,\n                max: 8,\n                step: 2,\n                value: 4\n            }),\n\n            timeoutRange = new RangeSlider('timeout', {\n                label: 'Limite de temps',\n                min: 0,\n                max: 5,\n                step: 1,\n                value: 0,\n                after: ' minutes'\n            }),\n\n            livesRange = new RangeSlider('lives', {\n                label: 'Nombre de vies',\n                min: 0,\n                max: 5,\n                step: 1,\n                value: 0\n            }),\n\n            matchedRange = new RangeSlider('matched', {\n\n                label: 'Enlever les cartes valides',\n                min: 0,\n                max: 1,\n                step: 1,\n                value: 0\n\n            }),\n\n            themeSelector = new ThemeSelector([-1, 1, 2, 3, 4], Settings.theme),\n\n\n            form = createElement('<form action=\"#\"/>', {\n                onsubmit(e) {\n                    e.preventDefault();\n                }\n            }, [\n                difficultyRange.element,\n                timeoutRange.element,\n                livesRange.element,\n                matchedRange.element,\n                themeSelector.element,\n\n            ]),\n            elements = {\n                form,\n                difficultyRange,\n                timeoutRange,\n                livesRange,\n                matchedRange,\n                themeSelector\n            };\n\n\n        let changed = false, loaded = false;\n\n        difficultyRange.on('change', e => {\n            let value = e.data.value;\n            difficultyRange.inputLabel = value + 'x' + value;\n        });\n\n        livesRange.on('change', e => {\n            let value = e.data.value;\n            if (0 === value) {\n                livesRange.inputLabelAfter = '';\n                livesRange.inputLabel = '&infin;';\n            } else {\n                livesRange.inputLabelAfter = ' vie';\n                if (value > 1) {\n                    livesRange.inputLabelAfter += \"s\";\n                }\n            }\n\n        });\n\n        timeoutRange.on('change', e => {\n            let value = e.data.value;\n            if (0 === value) {\n                timeoutRange.inputLabelAfter = '';\n                timeoutRange.inputLabel = '&infin;';\n            } else {\n                timeoutRange.inputLabelAfter = ' minute';\n                if (value > 1) {\n                    timeoutRange.inputLabelAfter += \"s\";\n                }\n            }\n        });\n\n        matchedRange.on('change', e => {\n            let value = e.data.value;\n            matchedRange.inputLabel = 'on';\n            if (0 === value) {\n                matchedRange.inputLabel = 'off';\n            }\n\n        });\n\n\n        dialog.body = form;\n        document.body.appendChild(dialog.element);\n\n        this.element = dialog.element;\n\n        this.one('loaded', () => {\n            loaded = true;\n        });\n\n        // load settings\n        const { settings } = Settings;\n\n        for (let key in settings) {\n            let\n                value = settings[key],\n                range = key + 'Range';\n            if (elements[range]) {\n                elements[range].value = value;\n            }\n\n        }\n\n        this.trigger('loaded', {\n            dialog,\n            settings\n        });\n\n        form.addEventListener('change', () => {\n            changed = loaded;\n        });\n\n\n\n        dialog.onSave(e => {\n\n\n            for (let key in defaults) {\n                let range = key + 'Range', value;\n                if (elements[range]) {\n                    Settings[key] = elements[range].value;\n                }\n            }\n\n            Settings.theme = themeSelector.value;\n\n            if (changed) {\n                this.trigger('update', {\n                    dialog,\n                    settings: Settings\n                });\n            }\n\n            this.trigger('save', {\n                dialog,\n                settings: Settings\n            });\n            changed = false;\n\n        });\n\n    }\n\n\n\n}\n\n\n\nexport default Settings;","\nimport { isNull, isNumeric, isString, isUndef } from \"./utils.mjs\"\nconst { JSON } = typeof globalThis !== 'undefined' ? globalThis : window;\n\n\nlet api;\n\nif (typeof document !== \"undefined\" && document.head && document.head.dataset) {\n\n    api = {\n        set: function (node, attr, value) {\n            if (isUndef(value) || isNull(value)) {\n                return this.remove(node, attr);\n            }\n            node.dataset[attr] = encode(value);\n        },\n        get: function (node, attr) {\n            return decode(node.dataset[attr]);\n        },\n        remove: function (node, attr) {\n            delete node.dataset[attr];\n        }\n    };\n} else {\n    api = {\n        set: function (node, attr, value) {\n\n            if (isUndef(value) || isNull(value)) {\n                return this.remove(node, attr);\n            }\n            node.setAttribute('data-' + toDashed(attr), encode(value));\n        },\n        get: function (node, attr) {\n            return decode(node.getAttribute('data-' + toDashed(attr)));\n        },\n        remove: function (node, attr) {\n            node.removeAttribute('data-' + toDashed(attr));\n        }\n    };\n}\n\n\nfunction toDashed(name) {\n    return name.replace(/([A-Z])/g, function (u) {\n        return \"-\" + u.toLowerCase();\n    });\n}\n\nfunction getElem(elem) {\n\n    if (isString(elem)) {\n        elem = document.querySelectorAll(elem);\n        if (elem.length === 1) {\n            elem = elem[0];\n        }\n    }\n\n    return elem;\n}\n\n\nexport function decode(value) {\n\n\n\n    //unification\n    if (isUndef(value) || isNull(value) || value === '') {\n        return null;\n    }\n    if (\n        (value.startsWith('{') && value.endsWith('}')) ||\n        (value.startsWith('[') && value.endsWith(']')) ||\n        isNumeric(value) || value === 'true' || value === 'false'\n    ) {\n        return JSON.parse(value);\n    }\n\n    return value;\n}\n\n\nexport function encode(value) {\n\n    if (!isString(value)) {\n        return JSON.stringify(value);\n    }\n    return value;\n}\n\n\n/**\n * data-attribute reader/setter\n * @param {Node|NodeList|String} elem \n * @param {String} attr \n * @param {Any} [value]\n */\nexport function dataset(elem, attr, value) {\n\n    elem = getElem(elem);\n\n    const $this = {\n\n        get(attr) {\n            if (elem instanceof NodeList) {\n                elem = elem[0];\n            }\n            if (elem instanceof HTMLElement) {\n                return api.get(elem, attr);\n            }\n            return null;\n        },\n\n        set(attr, value) {\n\n            if (elem instanceof NodeList) {\n                elem.forEach(el => {\n                    api.set(el, attr, value);\n                });\n            } else if (elem instanceof HTMLElement) {\n                api.set(elem, attr, value);\n            }\n\n\n            return $this;\n        },\n        remove(attr) {\n\n            if (elem instanceof NodeList) {\n                elem.forEach(el => {\n                    api.remove(el, attr);\n                });\n            } else if (elem instanceof HTMLElement) {\n                api.remove(elem, attr);\n            }\n\n            return $this;\n        }\n    };\n\n    switch (arguments.length) {\n        case 2:\n            return $this.get(attr);\n\n        case 3:\n            return $this.set(attr, value);\n\n    }\n\n    return $this;\n\n}\n\n\nexport default dataset;","import { createElement, isString } from \"../helpers/utils.mjs\";\n\n\n\nexport const icons = {\n    adonisjs: \"devicon-adonisjs-original\",\n    aftereffects: \"devicon-aftereffects-plain\",\n    amazonwebservices: \"devicon-amazonwebservices-original\",\n    android: \"devicon-android-plain\",\n    androidstudio: \"devicon-androidstudio-plain\",\n    aarch64: \"devicon-aarch64-plain\",\n    angularjs: \"devicon-angularjs-plain\",\n    ansible: \"devicon-ansible-plain\",\n    apache: \"devicon-apache-plain\",\n    apachekafka: \"devicon-apachekafka-original\",\n    appcelerator: \"devicon-appcelerator-original\",\n    apple: \"devicon-apple-original\",\n    appwrite: \"devicon-appwrite-plain\",\n    arduino: \"devicon-arduino-plain\",\n    atom: \"devicon-atom-original\",\n    azure: \"devicon-azure-plain\",\n    babel: \"devicon-babel-plain\",\n    backbonejs: \"devicon-backbonejs-plain\",\n    bamboo: \"devicon-bamboo-original\",\n    bash: \"devicon-bash-plain\",\n    behance: \"devicon-behance-plain\",\n    bitbucket: \"devicon-bitbucket-original\",\n    bootstrap: \"devicon-bootstrap-plain\",\n    bulma: \"devicon-bulma-plain\",\n    bower: \"devicon-bower-plain\",\n    c: \"devicon-c-plain\",\n    cakephp: \"devicon-cakephp-plain\",\n    canva: \"devicon-canva-original\",\n    centos: \"devicon-centos-plain\",\n    ceylon: \"devicon-ceylon-plain\",\n    chrome: \"devicon-chrome-plain\",\n    circleci: \"devicon-circleci-plain\",\n    clojure: \"devicon-clojure-plain\",\n    cmake: \"devicon-cmake-plain\",\n    clojurescript: \"devicon-clojurescript-plain\",\n    codecov: \"devicon-codecov-plain\",\n    codeigniter: \"devicon-codeigniter-plain\",\n    codepen: \"devicon-codepen-plain\",\n    coffeescript: \"devicon-coffeescript-original\",\n    confluence: \"devicon-confluence-original\",\n    couchdb: \"devicon-couchdb-plain\",\n    cplusplus: \"devicon-cplusplus-plain\",\n    csharp: \"devicon-csharp-plain\",\n    css3: \"devicon-css3-plain\",\n    cucumber: \"devicon-cucumber-plain\",\n    crystal: \"devicon-crystal-original\",\n    d3js: \"devicon-d3js-plain\",\n    dart: \"devicon-dart-plain\",\n    debian: \"devicon-debian-plain\",\n    denojs: \"devicon-denojs-original\",\n    devicon: \"devicon-devicon-plain\",\n    django: \"devicon-django-plain\",\n    docker: \"devicon-docker-plain\",\n    doctrine: \"devicon-doctrine-plain\",\n    \"dot-net\": \"devicon-dot-net-plain\",\n    dotnetcore: \"devicon-dotnetcore-plain\",\n    drupal: \"devicon-drupal-plain\",\n    digitalocean: \"devicon-digitalocean-plain\",\n    discordjs: \"devicon-discordjs-plain\",\n    electron: \"devicon-electron-original\",\n    eleventy: \"devicon-eleventy-plain\",\n    elixir: \"devicon-elixir-plain\",\n    elm: \"devicon-elm-plain\",\n    embeddedc: \"devicon-embeddedc-plain\",\n    erlang: \"devicon-erlang-plain\",\n    eslint: \"devicon-eslint-original\",\n    express: \"devicon-express-original\",\n    facebook: \"devicon-facebook-plain\",\n    feathersjs: \"devicon-feathersjs-original\",\n    figma: \"devicon-figma-plain\",\n    filezilla: \"devicon-filezilla-plain\",\n    firebase: \"devicon-firebase-plain\",\n    firefox: \"devicon-firefox-plain\",\n    flask: \"devicon-flask-original\",\n    flutter: \"devicon-flutter-plain\",\n    foundation: \"devicon-foundation-plain\",\n    fsharp: \"devicon-fsharp-plain\",\n    gatling: \"devicon-gatling-plain\",\n    gatsby: \"devicon-gatsby-plain\",\n    rect: \"devicon-rect-plain\",\n    gcc: \"devicon-gcc-plain\",\n    gentoo: \"devicon-gentoo-plain\",\n    gimp: \"devicon-gimp-plain\",\n    git: \"devicon-git-plain\",\n    github: \"devicon-github-original\",\n    gitlab: \"devicon-gitlab-plain\",\n    gitter: \"devicon-gitter-plain\",\n    go: \"devicon-go-plain\",\n    google: \"devicon-google-plain\",\n    googlecloud: \"devicon-googlecloud-plain\",\n    gradle: \"devicon-gradle-plain\",\n    grafana: \"devicon-grafana-original\",\n    grails: \"devicon-grails-plain\",\n    graphql: \"devicon-graphql-plain\",\n    groovy: \"devicon-groovy-plain\",\n    grunt: \"devicon-grunt-plain\",\n    gulp: \"devicon-gulp-plain\",\n    godot: \"devicon-godot-plain\",\n    haskell: \"devicon-haskell-plain\",\n    handlebars: \"devicon-handlebars-plain\",\n    haxe: \"devicon-haxe-plain\",\n    heroku: \"devicon-heroku-original\",\n    html5: \"devicon-html5-plain\",\n    hugo: \"devicon-hugo-plain\",\n    ie10: \"devicon-ie10-original\",\n    ifttt: \"devicon-ifttt-original\",\n    illustrator: \"devicon-illustrator-plain\",\n    inkscape: \"devicon-inkscape-plain\",\n    intellij: \"devicon-intellij-plain\",\n    ionic: \"devicon-ionic-original\",\n    jamstack: \"devicon-jamstack-original\",\n    jasmine: \"devicon-jasmine-plain\",\n    java: \"devicon-java-plain\",\n    javascript: \"devicon-javascript-plain\",\n    jeet: \"devicon-jeet-plain\",\n    jest: \"devicon-jest-plain\",\n    jenkins: \"devicon-jenkins-plain\",\n    jetbrains: \"devicon-jetbrains-plain\",\n    jira: \"devicon-jira-plain\",\n    jquery: \"devicon-jquery-plain\",\n    julia: \"devicon-julia-plain\",\n    jupyter: \"devicon-jupyter-plain\",\n    kaggle: \"devicon-kaggle-original\",\n    karma: \"devicon-karma-plain\",\n    kotlin: \"devicon-kotlin-plain\",\n    krakenjs: \"devicon-krakenjs-plain\",\n    kubernetes: \"devicon-kubernetes-plain\",\n    labview: \"devicon-labview-plain\",\n    laravel: \"devicon-laravel-plain\",\n    latex: \"devicon-latex-original\",\n    linkedin: \"devicon-linkedin-plain\",\n    lua: \"devicon-lua-plain\",\n    linux: \"devicon-linux-plain\",\n    materialui: \"devicon-materialui-plain\",\n    matlab: \"devicon-matlab-plain\",\n    magento: \"devicon-magento-original\",\n    markdown: \"devicon-markdown-original\",\n    maya: \"devicon-maya-plain\",\n    meteor: \"devicon-meteor-plain\",\n    minitab: \"devicon-minitab-plain\",\n    mocha: \"devicon-mocha-plain\",\n    modx: \"devicon-modx-plain\",\n    mongodb: \"devicon-mongodb-plain\",\n    moodle: \"devicon-moodle-plain\",\n    mysql: \"devicon-mysql-plain\",\n    neo4j: \"devicon-neo4j-plain\",\n    nestjs: \"devicon-nestjs-plain\",\n    networkx: \"devicon-networkx-original\",\n    nextjs: \"devicon-nextjs-original\",\n    nginx: \"devicon-nginx-original\",\n    nixos: \"devicon-nixos-plain\",\n    nodejs: \"devicon-nodejs-plain\",\n    nodewebkit: \"devicon-nodewebkit-plain\",\n    nuget: \"devicon-nuget-original\",\n    numpy: \"devicon-numpy-original\",\n    nuxtjs: \"devicon-nuxtjs-plain\",\n    objectivec: \"devicon-objectivec-plain\",\n    opera: \"devicon-opera-plain\",\n    ocaml: \"devicon-ocaml-plain\",\n    openal: \"devicon-openal-plain\",\n    opengl: \"devicon-opengl-plain\",\n    opensuse: \"devicon-opensuse-plain\",\n    oracle: \"devicon-oracle-original\",\n    pandas: \"devicon-pandas-original\",\n    perl: \"devicon-perl-plain\",\n    phalcon: \"devicon-phalcon-plain\",\n    photoshop: \"devicon-photoshop-plain\",\n    php: \"devicon-php-plain\",\n    phpstorm: \"devicon-phpstorm-plain\",\n    podman: \"devicon-podman-plain\",\n    polygon: \"devicon-polygon-plain\",\n    postgresql: \"devicon-postgresql-plain\",\n    premierepro: \"devicon-premierepro-plain\",\n    processing: \"devicon-processing-plain\",\n    protractor: \"devicon-protractor-plain\",\n    putty: \"devicon-putty-plain\",\n    pycharm: \"devicon-pycharm-plain\",\n    python: \"devicon-python-plain\",\n    pytorch: \"devicon-pytorch-original\",\n    phoenix: \"devicon-phoenix-plain\",\n    qt: \"devicon-qt-original\",\n    r: \"devicon-r-original\",\n    rails: \"devicon-rails-plain\",\n    react: \"devicon-react-original\",\n    redhat: \"devicon-redhat-plain\",\n    redis: \"devicon-redis-plain\",\n    redux: \"devicon-redux-original\",\n    rocksdb: \"devicon-rocksdb-plain\",\n    ruby: \"devicon-ruby-plain\",\n    rubymine: \"devicon-rubymine-plain\",\n    rust: \"devicon-rust-plain\",\n    safari: \"devicon-safari-plain\",\n    salesforce: \"devicon-salesforce-plain\",\n    sdl: \"devicon-sdl-plain\",\n    rstudio: \"devicon-rstudio-plain\",\n    sass: \"devicon-sass-original\",\n    scala: \"devicon-scala-plain\",\n    selenium: \"devicon-selenium-original\",\n    sequelize: \"devicon-sequelize-plain\",\n    shopware: \"devicon-shopware-original\",\n    shotgrid: \"devicon-shotgrid-plain\",\n    slack: \"devicon-slack-plain\",\n    socketio: \"devicon-socketio-original\",\n    solidity: \"devicon-solidity-plain\",\n    sourcetree: \"devicon-sourcetree-original\",\n    spring: \"devicon-spring-plain\",\n    spss: \"devicon-spss-plain\",\n    sqlalchemy: \"devicon-sqlalchemy-plain\",\n    sqlite: \"devicon-sqlite-plain\",\n    subversion: \"devicon-subversion-original\",\n    microsoftsqlserver: \"devicon-microsoftsqlserver-plain\",\n    ssh: \"devicon-ssh-original\",\n    stylus: \"devicon-stylus-original\",\n    svelte: \"devicon-svelte-plain\",\n    swift: \"devicon-swift-plain\",\n    symfony: \"devicon-symfony-original\",\n    storybook: \"devicon-storybook-plain\",\n    tailwindcss: \"devicon-tailwindcss-plain\",\n    tensorflow: \"devicon-tensorflow-original\",\n    terraform: \"devicon-terraform-plain\",\n    threejs: \"devicon-threejs-original\",\n    tortoisegit: \"devicon-tortoisegit-plain\",\n    towergit: \"devicon-towergit-plain\",\n    travis: \"devicon-travis-plain\",\n    thealgorithms: \"devicon-thealgorithms-plain\",\n    trello: \"devicon-trello-plain\",\n    twitter: \"devicon-twitter-original\",\n    typescript: \"devicon-typescript-plain\",\n    typo3: \"devicon-typo3-plain\",\n    ubuntu: \"devicon-ubuntu-plain\",\n    unity: \"devicon-unity-original\",\n    unix: \"devicon-unix-original\",\n    unrealengine: \"devicon-unrealengine-original\",\n    uwsgi: \"devicon-uwsgi-plain\",\n    vagrant: \"devicon-vagrant-plain\",\n    vim: \"devicon-vim-plain\",\n    visualstudio: \"devicon-visualstudio-plain\",\n    vuejs: \"devicon-vuejs-plain\",\n    vuestorefront: \"devicon-vuestorefront-plain\",\n    vscode: \"devicon-vscode-plain\",\n    webflow: \"devicon-webflow-original\",\n    weblate: \"devicon-weblate-plain\",\n    webpack: \"devicon-webpack-plain\",\n    webstorm: \"devicon-webstorm-plain\",\n    windows8: \"devicon-windows8-original\",\n    woocommerce: \"devicon-woocommerce-plain\",\n    wordpress: \"devicon-wordpress-plain\",\n    xamarin: \"devicon-xamarin-original\",\n    xcode: \"devicon-xcode-plain\",\n    xd: \"devicon-xd-plain\",\n    yarn: \"devicon-yarn-plain\",\n    yii: \"devicon-yii-plain\",\n    yunohost: \"devicon-yunohost-plain\",\n    zend: \"devicon-zend-plain\",\n    zig: \"devicon-zig-original\",\n    pytest: \"devicon-pytest-plain\",\n    opencv: \"devicon-opencv-plain\",\n    fastapi: \"devicon-fastapi-plain\",\n    k3s: \"devicon-k3s-original\",\n    packer: \"devicon-packer-original\",\n    anaconda: \"devicon-anaconda-original\",\n    rspec: \"devicon-rspec-original\",\n    argocd: \"devicon-argocd-plain\",\n    prometheus: \"devicon-prometheus-original\",\n    blender: \"devicon-blender-original\",\n    dropwizard: \"devicon-dropwizard-plain\",\n    vuetify: \"devicon-vuetify-plain\",\n    fedora: \"devicon-fedora-plain\"\n}, iconNames = Object.keys(icons);\n\n\n\nexport class Icon {\n\n    #elem\n    #label\n\n\n    get element() {\n        return this.#elem;\n    }\n\n    get label() {\n        return this.#label;\n    }\n\n\n    constructor(label) {\n\n        if (!isString(label)) {\n            throw new TypeError('name must be a String');\n        }\n\n        if (!icons[label]) {\n            throw new Error('Invalid label ' + label);\n        }\n\n\n        this.#label = label;\n        this.#elem = createElement('i', { class: icons[label] + ' font-face' });\n\n    }\n\n}\n\n\nexport default Icon;","import dataset from \"../helpers/dataset.mjs\";\nimport EventManager from \"../helpers/event-manager.mjs\";\nimport { capitalize, createElement, isInt, isString } from \"../helpers/utils.mjs\";\nimport Icon from \"./icon.mjs\";\n\n\n/**\n * @link https://marina-ferreira.github.io/projects/js/memory-game/\n */\n\nexport class Card {\n\n    #icon\n    #elem\n\n\n    get attached() {\n        return this.#elem.closest('body') !== null;\n    }\n\n    get element() {\n        return this.#elem;\n    }\n\n    get label() {\n        return this.#icon.label;\n    }\n\n\n    get icon() {\n        return this.#icon;\n    }\n\n\n\n    get flipped() {\n        return this.#elem.classList.contains('flip');\n    }\n\n\n    get matched() {\n        return this.#elem.classList.contains('matched');\n    }\n\n\n    set matched(bool) {\n\n        this.#elem.classList.remove('matched');\n\n        if (bool === true) {\n            this.#elem.classList.add('matched');\n        }\n    }\n\n    get detached() {\n        return this.#elem.parentElement === null;\n    }\n\n\n    get order() {\n        return parseInt(this.#elem.style.order ?? 0);\n    }\n\n\n    set order(num) {\n\n        if (!isInt(num)) {\n            throw new TypeError('num must be an integer');\n        }\n        this.#elem.style.order = num;\n    }\n\n\n    elements\n\n    constructor(icon) {\n\n\n        if (isString(icon)) {\n            icon = new Icon(icon);\n        }\n\n        if (icon instanceof Icon === false) {\n            throw new TypeError('icon must be instance of Icon');\n        }\n\n        this.#icon = icon;\n\n\n\n        this.#elem = createElement('div', {\n            class: 'memory-card',\n\n        }, [\n            createElement('div', { class: 'front-face' }, [\n                '<div></div>',\n                icon.element,\n                createElement('div', { class: 'card-label' }, capitalize(icon.label)),\n            ]),\n            createElement('div', { class: 'back-face' }),\n        ]);\n\n        Object.defineProperty(this.#elem, '_cardInstance', {\n            value: this,\n            configurable: true, enumerable: false\n        });\n\n        EventManager.mixin(this);\n\n\n        this.#elem.addEventListener('click', e => {\n            this.toggle();\n        });\n\n    }\n\n\n\n    toggle() {\n        if (!this.flipped) {\n            this.#elem.classList.add('flip');\n        } else {\n            this.#elem.classList.remove('flip');\n        }\n\n\n        this.trigger('flipped', {\n            card: this,\n            flipped: this.flipped\n        });\n    }\n\n    disable(flag = true) {\n\n        if (flag) {\n            this.#elem.classList.add('disabled');\n        } else {\n            this.#elem.classList.remove('disabled');\n        }\n\n    }\n\n\n    get disabled() {\n        return this.#elem.classList.contains('disabled');\n    }\n\n}\n\n\nexport default Card;","\n\nimport dataset from \"../helpers/dataset.mjs\";\nimport EventManager from \"../helpers/event-manager.mjs\";\nimport { createElement, encode, isInt } from \"../helpers/utils.mjs\";\nimport Card from \"./card.mjs\";\nimport { iconNames } from \"./icon.mjs\";\n\n\n\nfunction shuffle(list) {\n    let copy = [...list], result = [];\n    while (copy.length > 0) {\n        let randomNumber = Math.floor(Math.random() * copy.length);\n        result.push(copy[randomNumber]);\n        copy.splice(randomNumber, 1);\n    }\n    return result;\n}\n\n\n\n\n\n\nexport class Deck {\n\n\n    static generateGrid(difficulty) {\n\n        if (!isInt(difficulty)) {\n            throw new TypeError('difficulty must be an integer.');\n        }\n\n        return this.generate(difficulty * difficulty);\n    }\n\n\n    static generate(numberOfCards = 4) {\n\n        if (!isInt(numberOfCards)) {\n            throw new TypeError('numberOfCards must be an integer.');\n        }\n\n        let\n            cards = Math.max(4, numberOfCards + (numberOfCards % 2)),\n            available = [...iconNames],\n            labels = [];\n\n        for (let i = 0; i < cards / 2; i++) {\n            let\n                rand = Math.floor(Math.random() * available.length),\n                label = available[rand];\n\n            available.splice(rand, 1);\n\n            for (let j = 0; j < 2; j++) {\n                labels.push(new Card(label));\n            }\n        }\n        return new Deck(shuffle(labels));\n    }\n\n\n    #elem\n    #cardArea\n    #flipped\n    #cards\n    #pairs = 0\n    #flips = 0\n\n\n    #over = false\n    #complete = false\n\n\n    get attached() {\n        return this.#elem.closest('body') !== null;\n    }\n\n    get grid() {\n        return Math.sqrt(this.length);\n    }\n\n\n    get complete() {\n        return this.#complete;\n    }\n\n    get flips() {\n        return this.#flips;\n    }\n\n    isGameOver() {\n        return this.#over;\n    }\n\n    get element() {\n        return this.#elem;\n    }\n\n\n    get pairs() {\n        return this.#pairs;\n    }\n\n\n    get max() {\n        return Math.floor(this.length / 2);\n    }\n\n\n    get length() {\n        return this.#cards.length;\n    }\n\n\n    get width() {\n        return this.#cardArea.offsetWidth;\n    }\n\n\n    set width(width) {\n        this.#cardArea.style.maxWidth = encode(width) + 'px'\n    }\n\n\n    get height() {\n        return this.#cardArea.offsetHeight;\n    }\n\n    set height(height) {\n        this.#cardArea.style.height = encode(height) + 'px'\n    }\n\n\n\n    disable(flag = true) {\n\n        if (flag === true) {\n            this.#elem.classList.add('disabled');\n        } else {\n            this.#elem.classList.remove('disabled');\n        }\n\n    }\n\n\n\n\n    get disabled() {\n        return this.#elem.classList.contains('disabled');\n    }\n\n    constructor(cards = []) {\n        this.#cards = [];\n        this.#flipped = [];\n        this.#pairs = 0;\n        this.#cardArea = createElement('div', { class: \"card-area\" });\n        this.#elem = createElement('div', { class: 'memory-game-area border border-top-0' }, this.#cardArea);\n\n        EventManager.mixin(this);\n        cards.forEach(card => this.push(card));\n\n        this.on('flipped', e => {\n            const { card, flipped } = e.data;\n            let index = this.#flipped.indexOf(card);\n\n            if (index !== -1) {\n                if (!flipped) {\n                    this.#flipped.splice(index, 1);\n                }\n                return;\n            }\n\n            if (flipped) {\n                this.#flipped = [...this.#cards].filter(card => card.flipped).filter(card => !card.disabled);\n\n                if (this.#flipped.length === 2) {\n                    this.#flips++;\n                    this.disable();\n                    const [one, two] = this.#flipped;\n\n                    if (one.label === two.label) {\n                        this.#pairs++;\n                        this.#flipped = [];\n\n                        one.disable();\n                        two.disable();\n\n                        this.trigger('success', {\n                            deck: this,\n                            cards: [one, two]\n                        });\n\n                        if (this.pairs === this.max) {\n                            this.#complete = true;\n                            this.trigger('complete', { deck: this });\n\n                            setTimeout(() => {\n                                this.#elem.classList.add('complete');\n                            }, 1700);\n\n                        } else {\n                            this.disable(false);\n                        }\n\n                    }\n                    else {\n                        this.#flipped = [];\n                        this.trigger('failed', {\n                            deck: this,\n                            cards: [one, two]\n                        });\n\n                    }\n                }\n\n            }\n\n        });\n\n        this.on('failed', e => {\n            setTimeout(() => {\n                if (!this.#over) {\n                    e.data.cards.forEach(card => card.toggle());\n                    this.disable(false);\n                }\n            }, 1500);\n        });\n\n\n        this.on('gameover', e => {\n            this.#over = this.#complete = true;\n            this.disable(true);\n            setTimeout(() => {\n                this.#elem.classList.add('gameover');\n            }, 1500);\n\n        });\n\n        this.trigger('displayed', {\n            deck: this\n        });\n\n        dataset(this.#elem, 'grid', this.grid);\n\n    }\n\n\n    push(card) {\n\n        if (card instanceof Card) {\n            this.#cards.push(card);\n            this.#cardArea.appendChild(card.element);\n            card.on('flipped', e => {\n                this.trigger('flipped', e.data);\n            });\n        }\n        return this.length;\n    }\n\n\n\n\n\n    forEach(callback) {\n        this.#cards.forEach(callback);\n    }\n\n    shuffle() {\n        this.#cards = shuffle(this.#cards);\n        this.#cardArea.innerHTML = '';\n        this.#cards.forEach(card => this.#cardArea.appendChild(card.element));\n        return this;\n    }\n\n\n    destroy() {\n        this.element.remove();\n    }\n\n}\n\n\n\nexport default Deck;","import EventManager from \"../helpers/event-manager.mjs\";\nimport { isInt } from \"../helpers/utils.mjs\";\n\n\n\n\nexport const\n    MILLISECOND = 1,\n    SECOND = 1000,\n    MINUTE = 60000,\n    HOUR = 3600000,\n    DAY = 86400000;\n\nfunction computeTime(start, elapsed = 0) {\n\n    return (+new Date() - start) + elapsed;\n}\n\n\n\nexport class TimeStamp {\n\n    #ms\n\n    constructor(ms) {\n\n        if (!isInt(ms)) {\n            throw new TypeError('ms must be an integer');\n        }\n\n        this.#ms = ms;\n    }\n\n\n\n    get hours() {\n        return Math.floor(this.#ms / HOUR);\n    }\n\n    get minutes() {\n        return Math.floor(this.#ms / MINUTE);\n    }\n\n\n\n    get seconds() {\n        return Math.floor(this.#ms / SECOND);\n    }\n\n\n    get miliseconds() {\n        return this.#ms;\n    }\n\n\n    export() {\n\n\n\n        let values = {\n            hours: HOUR,\n            minutes: MINUTE,\n            seconds: SECOND,\n            miliseconds: MILLISECOND\n        }, remaining = this.#ms, result = {};\n\n\n\n        for (let key in values) {\n\n            let\n                divider = values[key],\n                floor = Math.floor(remaining / divider);\n            remaining -= floor * divider;\n            result[key] = floor;\n        }\n\n\n        result.timestamp = this.#ms;\n\n        return result;\n    }\n\n\n    toString() {\n\n        return formatTime(this.#ms);\n    }\n\n\n\n}\n\n\n\n\nexport class Chronometer {\n\n    #startTime = 0\n    #running = false\n    #paused = false\n    #elapsedTime = 0\n    #laps = []\n\n    constructor(autostart = true) {\n\n        if (autostart) {\n            this.start();\n        }\n    }\n\n    start() {\n        if (!this.#running) {\n            this.#running = true;\n            this.#laps = [];\n            this.#elapsedTime = 0;\n            this.#startTime = +new Date();\n        }\n    }\n\n    stop() {\n        if (!this.#running) {\n            return this.#elapsedTime ?? 0;\n        }\n        this.#running = false;\n        return this.#elapsedTime = computeTime(this.#startTime);\n    }\n\n\n    pause() {\n\n        this.#paused = true;\n\n        if (!this.#running) {\n            return this.#elapsedTime;\n        }\n\n        return this.stop();\n\n    }\n\n\n    resume() {\n\n        if (!this.#paused) {\n            return;\n        }\n\n        this.#paused = false;\n        this.#startTime = + new Date() - this.#elapsedTime;\n        this.#running = true;\n\n    }\n\n\n    lap() {\n        if (!this.isStarted()) {\n            return this.#laps[this.#laps.length - 1];\n        }\n\n        let\n            prev = this.#laps[this.#laps.length - 1]?.elapsed ?? this.#startTime,\n            current = this.elapsed,\n\n            lapTime = {\n                start: this.#startTime,\n                elapsed: current,\n                time: current - prev\n            };\n\n        this.#laps.push(lapTime);\n\n        return lapTime;\n\n    }\n\n\n    isStarted() {\n        return this.#running;\n    }\n\n    isPaused() {\n        return this.#paused;\n    }\n\n    get elapsed() {\n\n        if (this.isStarted()) {\n            return computeTime(this.#startTime);\n        }\n        return this.#elapsedTime;\n\n    }\n\n\n    export() {\n        return (new TimeStamp(this.elapsed)).export();\n    }\n\n}\n\nexport function formatTime(ms) {\n    let { hours, minutes, seconds, miliseconds } = (new TimeStamp(ms)).export(), result = '';\n\n\n    if (hours < 10) {\n        result += '0';\n    }\n\n    result += hours + ':';\n\n    if (minutes < 10) {\n        result += '0';\n    }\n\n    result += minutes + ':';\n\n    if (seconds < 10) {\n        result += '0';\n    }\n    result += seconds + ',';\n\n    if (miliseconds < 100) {\n        result += '0';\n    }\n    if (miliseconds < 10) {\n        result += '0';\n    }\n    result += miliseconds;\n    return result;\n\n}\n\nexport class Timer {\n\n    #duration\n    #ticks\n    #chrono\n    #timeout\n    #interval\n\n    get started() {\n        return this.#chrono.isStarted();\n    }\n\n    get paused() {\n        return this.#chrono.isPaused();\n    }\n\n\n    get elapsed() {\n        return this.#chrono.elapsed;\n    }\n\n\n    constructor(duration = MINUTE, ticks = 500) {\n\n        if (!isInt(duration)) {\n            throw new TypeError('duration must be an integer');\n\n        }\n        if (!isInt(ticks)) {\n            throw new TypeError('ticks must be an integer');\n\n        }\n\n\n        this.#duration = duration;\n        this.#ticks = ticks;\n\n        this.#chrono = new Chronometer(false);\n        EventManager.mixin(this);\n\n        this.on('ended', () => {\n            this.stop();\n        });\n\n\n    }\n\n\n    start() {\n\n        if (this.started) {\n            return;\n        }\n\n        this.#timeout = setTimeout(() => {\n            this.trigger('ended');\n        }, this.#duration);\n\n        this.#interval = setInterval(() => {\n            this.trigger('tick', {\n                chrono: this.#chrono,\n                timer: this\n            });\n        }, this.#ticks);\n\n\n\n        this.trigger('started');\n\n        this.#chrono.start();\n    }\n\n    stop() {\n\n        if (!this.started) {\n            return this.#chrono.stop();\n        }\n\n        clearTimeout(this.#timeout);\n\n        clearInterval(this.#interval);\n        this.trigger('stopped');\n        return this.#chrono.stop();\n\n    }\n\n\n    pause() {\n\n        if (this.paused || !this.started) {\n            return this.elapsed;\n        }\n\n        clearTimeout(this.#timeout);\n\n        clearInterval(this.#interval);\n        this.trigger('paused');\n        return this.#chrono.pause();\n    }\n\n\n    resume() {\n\n        if (!this.paused) {\n            return;\n        }\n\n        let timeout = this.#duration - this.elapsed;\n\n\n        this.#interval = setInterval(() => {\n            this.trigger('tick', {\n                chrono: this.#chrono,\n                timer: this\n            });\n        }, this.#ticks);\n\n        this.#timeout = setTimeout(() => {\n            this.trigger('ended');\n        }, timeout);\n    }\n\n}","import { decode, encode } from \"../helpers/dataset.mjs\";\nimport EventManager from \"../helpers/event-manager.mjs\";\nimport { createElement, isInt } from \"../helpers/utils.mjs\";\nimport { Chronometer, MINUTE, TimeStamp } from \"./timer.mjs\";\n\nconst defaults = {\n    score: 0,\n    lives: 0,\n\n};\n\nexport class Stats {\n\n\n    get tour() {\n        return decode(this.elements.tour.innerHTML);\n    }\n\n    set tour(tour) {\n        this.elements.tour.innerHTML = encode(tour);\n    }\n\n\n    get pairs() {\n        return decode(this.elements.pairs.innerHTML);\n    }\n\n    set pairs(pairs) {\n        this.elements.pairs.innerHTML = encode(pairs);\n    }\n\n    get vies() {\n        return decode(this.elements.vies.innerHTML);\n    }\n\n    set vies(vies) {\n        this.elements.vies.innerHTML = encode(vies);\n    }\n\n    get elapsed() {\n        return this.timer.elapsed;\n    }\n\n\n    element\n    elements\n    timer\n    countdown\n    deck\n    settings\n\n    #vies\n\n\n\n    constructor(deck, settings) {\n        this.deck = deck;\n        this.settings = settings;\n\n        EventManager.mixin(this);\n\n\n        this.#vies = settings.lives === 0 ? -1 : settings.lives;\n\n        const\n\n            tour = createElement('td', '0'),\n            pairs = createElement('td', '0/' + deck.max),\n            vies = createElement('td', '&infin;'),\n            timer = this.timer = new Clock(),\n\n            countdown = this.countdown = new CountDownClock(timer, settings.timeout * MINUTE),\n\n            root = createElement('<table class=\"table table-fixed table-bordered text-center mb-0 game-stats\">', [\n                '<thead><tr><th>Tour</th><th>Paires</th><th>Cartes</th><th>Vies</th><th>Timer</th></tr></thead>',\n                createElement('tbody', [\n                    createElement('tr', [\n\n                        tour,\n                        pairs,\n                        createElement('td', encode(deck.length)),\n                        vies,\n                        createElement('td', timer.element),\n\n\n                    ]),\n                    createElement('tr', [\n                        createElement('<td colspan=\"5\"/>', countdown.element)\n                    ])\n                ])\n\n\n            ]);\n\n        this.element = root;\n        this.elements = {\n            root, tour, pairs, vies\n        };\n\n\n        countdown.on('timeout', e => {\n            deck.trigger('gameover');\n        });\n\n        deck.one('flipped', e => {\n            timer.start();\n        });\n\n        deck.on('success failed', e => {\n            this.tour = deck.flips;\n            this.pairs = deck.pairs + '/' + deck.max;\n\n            if (e.type === 'failed') {\n                if (this.#vies === 0) {\n                    deck.trigger('gameover');\n                } else {\n                    this.#vies--;\n\n                    if (this.#vies > -1) {\n                        this.vies = this.#vies;\n                    }\n                }\n\n            } else if (settings.matched > 0) {\n                const [one, two] = e.data.cards;\n\n                one.matched = true;\n                two.matched = true;\n            }\n\n        });\n\n\n        deck.on('gameover complete', e => {\n            timer.stop();\n        });\n\n        if (this.#vies > -1) {\n            this.vies = this.#vies;\n        }\n    }\n    destroy() {\n        this.timer.stop();\n        this.element.remove();\n        this.deck.destroy();\n    }\n\n\n}\n\n\n\nexport class Clock {\n\n    get seconds() {\n\n        return this.chrono.export().seconds;\n\n    }\n\n    get hours() {\n        return this.chrono.export().hours;\n    }\n\n\n    get minutes() {\n        return this.chrono.export().minutes;\n    }\n\n\n    get elapsed() {\n        return Math.floor(this.chrono.elapsed / 1000);\n    }\n\n\n    get started() {\n        return this.chrono.isStarted();\n    }\n\n    get paused() {\n        return this.chrono.isPaused();\n    }\n\n\n    get started() {\n        return this.chrono.isStarted();\n    }\n\n    chrono\n    elements\n    element\n\n    #interval\n\n    constructor() {\n\n\n        const\n            hours = createElement('<span class=\"hours\" />'),\n            minutes = createElement('<span class=\"minutes\"/>'),\n            seconds = createElement('<span class=\"seconds\"/>'),\n            root = createElement('<div class=\"time  mx-auto\"/>', [\n                hours, minutes, seconds\n            ]);\n\n        this.chrono = new Chronometer(false);\n\n        this.elements = {\n            root, hours, minutes, seconds\n        };\n\n        this.element = root;\n\n        EventManager.mixin(this);\n    }\n\n    #update() {\n\n        if (this.chrono.isPaused()) {\n            return;\n        }\n\n        const data = this.chrono.export();\n\n        if (data.timestamp > 0) {\n            ['hours', 'minutes', 'seconds'].forEach(key => {\n\n                if (key === 'hours' && data[key] === 0) {\n                    return;\n                }\n\n                let value = data[key];\n                this.elements[key].innerHTML = value < 10 ? `0${value}` : `${value}`;\n            });\n        }\n\n        this.trigger('update', {\n            data,\n            clock: this,\n            chrono: this.chrono\n        });\n\n    }\n\n\n    start() {\n        if (!this.chrono.isStarted()) {\n            this.chrono.start();\n            this.#interval = setInterval(() => {\n                this.#update();\n            }, 50);\n\n            this.trigger('start', {\n                clock: this\n            });\n\n            this.#update();\n        }\n    }\n\n\n    stop() {\n        if (this.#interval) {\n            this.chrono.stop();\n            clearInterval(this.#interval);\n            this.trigger('stop', {\n                clock: this\n            });\n\n            this.#update();\n        }\n\n        this.#interval = null;\n    }\n\n\n    pause() {\n\n        if (this.chrono.isStarted()) {\n            this.#update();\n            this.chrono.pause();\n        }\n\n    }\n\n\n    resume() {\n        if (this.chrono.isPaused()) {\n            this.chrono.resume();\n        }\n\n    }\n}\n\n\n\nclass CountDownClock {\n\n\n    clock\n    element\n\n    elements\n\n    timeout\n\n    constructor(clock, timeout = 0) {\n\n        if (clock instanceof Clock === false) {\n            throw new TypeError('clock must be an instance of Clock');\n        }\n\n        if (!isInt(timeout)) {\n            throw new TypeError('timeout must be an integer');\n        }\n\n        EventManager.mixin(this);\n\n        this.clock = clock;\n        const\n            hours = createElement('<span class=\"hours\" />'),\n            minutes = createElement('<span class=\"minutes\"/>'),\n            seconds = createElement('<span class=\"seconds\"/>'),\n            root = createElement('<div class=\"time mx-auto\"/>', [\n                hours, minutes, seconds\n            ]);\n        this.elements = {\n            root,\n            hours,\n            minutes,\n            seconds\n        };\n\n        this.element = root;\n        if (timeout > 0) {\n            clock.on('update', e => {\n                const { data } = e.data;\n\n\n                if (data.timestamp >= timeout) {\n\n                    this.#update(0);\n\n                    clock.stop();\n                    this.trigger('timeout', {\n                        clock: clock,\n                        chrono: clock.chrono,\n                        countdown: this\n                    });\n\n\n\n                } else {\n                    this.#update(timeout - data.timestamp);\n                }\n            });\n        }\n\n\n\n\n    }\n\n    #update(ms) {\n\n\n        const data = (new TimeStamp(ms)).export();\n\n        ['hours', 'minutes', 'seconds'].forEach(key => {\n\n            if (key === 'hours' && data[key] === 0) {\n                return;\n            }\n\n            let value = data[key];\n            this.elements[key].innerHTML = value < 10 ? `0${value}` : `${value}`;\n        });\n\n    }\n}\n\nexport default Stats;","import Settings from \"./settings.mjs\";\n\nimport Deck from \"./deck.mjs\";\nimport Stats from \"./stats.mjs\";\nimport EventManager from \"../helpers/event-manager.mjs\";\nimport dataset from \"../helpers/dataset.mjs\";\n\n\nexport class Game {\n\n\n    container\n\n    stats\n    deck\n\n    #paused = false\n\n    #started = false\n\n    get paused() {\n        return this.#paused;\n    }\n    get started() {\n        return this.#started\n    }\n\n\n    constructor(container) {\n        if (container instanceof Element === false) {\n            throw new TypeError('container must be an Element');\n        }\n        this.container = container;\n\n\n        EventManager.mixin(this);\n\n        this.on('pause', e => {\n            this.stats.timer.pause();\n            this.deck.element.classList.add('paused');\n            this.deck.disable();\n        });\n\n        this.on('resume', e => {\n            this.deck.element.classList.remove('paused');\n            this.deck.disable(false);\n            this.stats.timer.resume();\n        });\n\n        // this.start(Settings);\n    }\n\n    destroy() {\n        this.stats.destroy();\n        this.trigger('destroy', { game: this });\n    }\n\n    start(settings) {\n\n        if (this.stats) {\n            this.destroy();\n        }\n\n        this.#started = this.#paused = false;\n\n        const { difficulty, theme } = settings, { container } = this;\n        const\n            deck = this.deck = Deck.generateGrid(difficulty),\n            stats = this.stats = new Stats(deck, settings);\n\n        dataset(deck.element, 'theme', theme);\n\n        container.appendChild(stats.element);\n        container.appendChild(deck.element);\n\n        deck.one('flipped', e => {\n\n            this.#started = true;\n            this.trigger('start', {\n                game: this\n            })\n        });\n\n\n        deck.on('gameover complete', e => {\n            this.trigger(e.type + ' stop', { game: this });\n\n        });\n\n\n        deck.element.addEventListener('click', e => {\n\n            if (deck.isGameOver() || deck.complete) {\n                this.start(settings);\n            } else if (this.#paused) {\n                this.resume();\n            }\n\n        });\n\n\n\n        this.trigger('displayed', { game: this });\n\n\n    }\n\n    pause() {\n\n        if (!this.#paused && this.#started) {\n            this.#paused = true;\n            this.trigger('pause', {\n                game: this\n            });\n\n        }\n\n    }\n\n    resume() {\n\n        if (this.#paused) {\n            this.#paused = false;\n            this.trigger('resume', {\n                game: this\n            });\n        }\n\n    }\n\n}\n\n\n\nexport default Game;","\nimport Game from \"./components/game.mjs\";\nimport Settings, { DialogSettings } from \"./components/settings.mjs\";\nimport dataset from \"./helpers/dataset.mjs\";\n\n\n/**\n * @link https://getbootstrap.com/docs/5.3/components/tooltips/\n */\n\n[...document.querySelectorAll('[data-toggle=\"tooltip\"],[data-bs-toggle=\"tooltip\"]')].map(el => new bootstrap.Tooltip(el));\n\nlet\n    app = document.querySelector('#app'), settingsUI = new DialogSettings(),\n    game = new Game(app), playbtn = document.querySelector('#playbtn'), paused;\n\n\ndocument.body.appendChild(settingsUI.element);\n\nsettingsUI.on('update', e => {\n    const { settings } = e.data;\n\n    dataset(playbtn, 'play', \"stopped\");\n    game.start(settings);\n});\n\n\nsettingsUI.dialog.onShow(e => {\n    if (!game.paused) {\n        game.pause();\n    }\n\n});\n\ngame.on('pause resume', e => {\n    const { type } = e;\n    dataset(playbtn, 'play', type === 'pause' ? \"paused\" : \"play\")\n}).on('gameover complete', e => {\n    dataset(playbtn, 'play', \"stopped\");\n}).on('start', e => {\n    dataset(playbtn, 'play', \"play\")\n});\n\nplaybtn.addEventListener('click', e => {\n    e.preventDefault();\n    if (game.started) {\n        if (game.paused) {\n            game.resume();\n        } else {\n            game.pause();\n        }\n    }\n\n});\n\n\nfunction onResize() {\n    const { deck } = game, { height } = deck;\n    deck.width = Math.floor(height * 3 / 4);\n    deck.forEach(card => {\n        let width = card.element.offsetWidth;\n        card.icon.element.style.fontSize = Math.floor(.6 * width) + 'px';\n        card.element.querySelector('.card-label').style.fontSize = Math.floor(.15 * width) + 'px';\n    });\n}\n\n\naddEventListener('resize', onResize);\ngame.on('displayed', onResize);\n\n\ngame.start(Settings);"],"names":["global","unsafeWindow","globalThis","window","document","JSON","RE_NUMERIC","isPlainObject","param","Object","getPrototypeOf","prototype","isUndef","isString","isNumber","isInt","Number","isInteger","isFloat","parseFloat","isUnsigned","isNumeric","test","intVal","isArray","Array","isNull","isObject","isCallable","isFunction","isScalar","capitalize","split","map","charAt","toUpperCase","slice","toLowerCase","join","isEmpty","length","keys","runAsync","callback","_len","arguments","args","_key","setTimeout","apply","uuidv4","uuid","i","random","Math","toString","isHTML","startsWith","endsWith","decode","value","parse","encode","stringify","parseDataElement","data","_data","root","undefined","result","_loop","key","concat","item","push","_ret","createElement","tag","_params","_html","params","html","TypeError","Element","elem","html2element","attr","forEach","_item","_slicedToArray","setAttribute","appendChild","innerHTML","uniqid","_uniqid$values","values","includes","substring","template","content","childNodes","_toConsumableArray","_listeners","WeakMap","_useasync","EventManager","useasync","_classCallCheck","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","_createClass","getListenersForEvent","type","_classPrivateFieldGet","filter","listener","on","_this","once","one","off","_this2","trigger","_this3","event","Event","_event","_event$data","listeners","from","types","_i","_listeners2","_event2","_event3","mixin","binding","_this4","method","defineProperty","enumerable","configurable","_classStaticPrivateFi","_classStaticPrivateFieldSpecGet","_events","_classStaticPrivateFieldSpecSet","_classStaticPrivateFi2","_classStaticPrivateFi3","_classStaticPrivateFi4","DataStore","name","has","get","multiset","set","remove","Error","clear","_storage","_prefix","_generatePrefix","WeakSet","WebStorage","_DataStore","_inherits","_super","_createSuper","webstorage","prefix","_webstorage","_prefix2","call","_classPrivateMethodInitSpec","_assertThisInitialized","sessionStorage","localStorage","_classPrivateMethodGet","_generatePrefix2","defaultValue","getItem","removeItem","setItem","store","indexOf","LocalStore","_bootstrap","bootstrap","Modal","defaults","title","body","_modal","_addEventListener","Dialog","id","_id","_defineProperty","assign","titleText","bodyContents","header","cancelBtn","saveBtn","onclick","e","preventDefault","onHidden","target","dispatchEvent","bubbles","modal","hide","footer","dialog","elements","element","_classPrivateFieldGet2","show","_classPrivateFieldGet3","toggle","_classPrivateFieldGet4","onHide","_addEventListener2","onShow","onShown","onSave","addEventListener","RangeSlider","label","min","max","step","after","input","class","inputLabel","inputContainer","slider","dataset","RadioElement","for","getAttribute","checked","ThemeSelector","themes","t","theme","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","f","difficulty","timeout","lives","matched","Settings","DialogSettings","difficultyRange","timeoutRange","livesRange","matchedRange","themeSelector","form","onsubmit","changed","loaded","inputLabelAfter","settings","range","_ref","api","head","node","toDashed","removeAttribute","replace","u","getElem","querySelectorAll","$this","NodeList","HTMLElement","el","icons","adonisjs","aftereffects","amazonwebservices","android","androidstudio","aarch64","angularjs","ansible","apache","apachekafka","appcelerator","apple","appwrite","arduino","atom","azure","babel","backbonejs","bamboo","bash","behance","bitbucket","bulma","bower","c","cakephp","canva","centos","ceylon","chrome","circleci","clojure","cmake","clojurescript","codecov","codeigniter","codepen","coffeescript","confluence","couchdb","cplusplus","csharp","css3","cucumber","crystal","d3js","dart","debian","denojs","devicon","django","docker","doctrine","dotnetcore","drupal","digitalocean","discordjs","electron","eleventy","elixir","elm","embeddedc","erlang","eslint","express","facebook","feathersjs","figma","filezilla","firebase","firefox","flask","flutter","foundation","fsharp","gatling","gatsby","rect","gcc","gentoo","gimp","git","github","gitlab","gitter","go","google","googlecloud","gradle","grafana","grails","graphql","groovy","grunt","gulp","godot","haskell","handlebars","haxe","heroku","html5","hugo","ie10","ifttt","illustrator","inkscape","intellij","ionic","jamstack","jasmine","java","javascript","jeet","jest","jenkins","jetbrains","jira","jquery","julia","jupyter","kaggle","karma","kotlin","krakenjs","kubernetes","labview","laravel","latex","linkedin","lua","linux","materialui","matlab","magento","markdown","maya","meteor","minitab","mocha","modx","mongodb","moodle","mysql","neo4j","nestjs","networkx","nextjs","nginx","nixos","nodejs","nodewebkit","nuget","numpy","nuxtjs","objectivec","opera","ocaml","openal","opengl","opensuse","oracle","pandas","perl","phalcon","photoshop","php","phpstorm","podman","polygon","postgresql","premierepro","processing","protractor","putty","pycharm","python","pytorch","phoenix","qt","r","rails","react","redhat","redis","redux","rocksdb","ruby","rubymine","rust","safari","salesforce","sdl","rstudio","sass","scala","selenium","sequelize","shopware","shotgrid","slack","socketio","solidity","sourcetree","spring","spss","sqlalchemy","sqlite","subversion","microsoftsqlserver","ssh","stylus","svelte","swift","symfony","storybook","tailwindcss","tensorflow","terraform","threejs","tortoisegit","towergit","travis","thealgorithms","trello","twitter","typescript","typo3","ubuntu","unity","unix","unrealengine","uwsgi","vagrant","vim","visualstudio","vuejs","vuestorefront","vscode","webflow","weblate","webpack","webstorm","windows8","woocommerce","wordpress","xamarin","xcode","xd","yarn","yii","yunohost","zend","zig","pytest","opencv","fastapi","k3s","packer","anaconda","rspec","argocd","prometheus","blender","dropwizard","vuetify","fedora","iconNames","_elem","_label","Icon","_icon","Card","icon","closest","classList","contains","bool","add","parentElement","parseInt","style","order","num","flipped","card","disable","flag","shuffle","list","copy","randomNumber","floor","splice","_cardArea","_flipped","_cards","_pairs","_flips","_over","_complete","Deck","cards","_e$data","index","disabled","_this$flips","two","_this$pairs","deck","pairs","grid","sqrt","isGameOver","offsetWidth","width","maxWidth","offsetHeight","height","destroy","generateGrid","generate","numberOfCards","available","labels","rand","j","MILLISECOND","SECOND","MINUTE","HOUR","computeTime","start","elapsed","Date","_ms","TimeStamp","ms","_export","hours","minutes","seconds","miliseconds","remaining","divider","timestamp","formatTime","_startTime","_running","_paused","_elapsedTime","_laps","Chronometer","autostart","stop","pause","resume","lap","isStarted","prev","current","lapTime","time","isPaused","export","_TimeStamp$export","_vies","Stats","tour","vies","timer","Clock","countdown","CountDownClock","flips","_this$vies","_e$data$cards","_interval","_update","chrono","setInterval","_update2","clock","clearInterval","_update3","_update4","_this5","_started","Game","container","stats","game","complete","Tooltip","app","querySelector","settingsUI","playbtn","paused","started","onResize","fontSize"],"mappings":"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"}