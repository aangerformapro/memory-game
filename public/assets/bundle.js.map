{"version":3,"file":"bundle.js","sources":["../../src/mjs/helpers/utils.mjs","../../src/mjs/components/timer.mjs","../../src/mjs/index.mjs"],"sourcesContent":["/* global unsafeWindow, globalThis */\n\n\nconst global = typeof unsafeWindow !== 'undefined' ? unsafeWindow : (typeof globalThis !== 'undefined' ? globalThis : window);\nconst { document, JSON } = global;\nconst RE_NUMERIC = /^-?(?:[\\d]+\\.)?\\d+$/;\n\nexport const\n    isPlainObject = (param) => param instanceof Object && Object.getPrototypeOf(param) === Object.prototype,\n    isUndef = (param) => typeof param === 'undefined',\n    isString = (param) => typeof param === 'string',\n    isNumber = (param) => typeof param === 'number',\n    isInt = (param) => Number.isInteger(param),\n    isFloat = (param) => isNumber(param) && parseFloat(param) === param,\n    isUnsigned = (param) => param >= 0 && isNumber(param),\n    isUnsignedInt = (param) => param >= 0 && isInt(param),\n    isNumeric = (param) => isInt(param) || isFloat(param) || RE_NUMERIC.test(param),\n    intVal = (param) => isNumeric(param) && parseInt(param),\n    floatVal = (param) => isNumeric(param) && parseFloat(param),\n    isBool = (param) => typeof param === 'boolean',\n    isArray = (param) => Array.isArray(param),\n    isNull = (param) => param === null,\n    isObject = (param) => typeof param === 'object' && !isNull(param),\n    isCallable = (param) => typeof param === 'function',\n    isFunction = isCallable,\n    isScalar = (param) => isNumeric(param) || isString(param) || isBool(param),\n    capitalize = (param) => isString(param) && param.split(/\\s+/).map(param => param.charAt(0).toUpperCase() + param.slice(1).toLowerCase()).join(' ');\n\nconst\n    VALID_REFERERRPOLICY = [\n        'no-referrer', 'no-referrer-when-downgrade',\n        'origin', 'origin-when-cross-origin',\n        'same-origin', 'strict-origin',\n        'strict-origin-when-cross-origin', 'unsafe-url'\n    ],\n    VALID_CROSSORIGIN = ['', 'use-credentials', 'anonymous'];\nexport function isEmpty(param) {\n\n    if (isUndef(param) || param === null) {\n        return true;\n    }\n    if (isString(param) || isArray(param)) {\n        return param.length === 0;\n    }\n    if (isNumber(param)) {\n        return param === 0;\n    }\n\n    if (isPlainObject(param)) {\n        return Object.keys(param).length === 0;\n    }\n    return false;\n}\n\nexport function runAsync(callback, ...args) {\n    if (isFunction(callback)) {\n        setTimeout(() => {\n            callback(...args);\n        }, 0);\n    }\n}\n\n/**\n * Creates an Element\n *\n * @param {string} tagName\n * @param {Object} [attributes]\n * @param {string} [innerHTML]\n * @returns {HTMLElement}\n */\nexport function createElementOld(tagName = 'div', attributes = null, innerHTML = '') {\n    if (isString(attributes)) {\n        innerHTML = attributes;\n        attributes = null;\n    }\n\n    attributes = isPlainObject(attributes) ? attributes : {};\n\n    let elem = document.createElement(tagName),\n        props = Object.keys(attributes),\n        prop;\n\n    for (let i = 0; i < props.length; i++) {\n        prop = props[i];\n        if (prop === 'html') {\n            innerHTML = attributes[prop];\n            continue;\n        }\n\n        if (/^data(set)?$/.test(prop) && isPlainObject(attributes[prop])) {\n            Object.keys(attributes[prop]).forEach((key) => {\n                elem.dataset[key] = attributes[prop][key];\n            });\n        } else if (typeof attributes[prop] !== 'string') {\n            elem[prop] = attributes[prop];\n            continue;\n        } else {\n            elem.setAttribute(prop, attributes[prop]);\n        }\n    }\n    if (innerHTML.length > 0) {\n        elem.innerHTML = innerHTML;\n    }\n\n    return elem;\n}\n\n\nfunction toDashed(name) {\n    return name.replace(/([A-Z])/g, function (u) {\n        return \"-\" + u.toLowerCase();\n    });\n}\n\n/**\n * Creates an Element\n *\n * @param {string} tagName\n * @param {Object} [params]\n * @param {string|HTMLElement|string[]|HTMLElement[]} [html]\n * @returns {HTMLElement}\n */\nexport function createElement(tag, params = null, html = '') {\n\n    if (typeof tag !== 'string') {\n        throw new TypeError('tag must be a String');\n    }\n\n\n    if (\n        typeof params === 'string' ||\n        params instanceof Element ||\n        params instanceof NodeList ||\n        Array.isArray(params)\n    ) {\n        html = params;\n        params = {};\n    }\n\n\n    params ??= {};\n    html ??= '';\n\n    const elem = document.createElement(tag);\n\n    for (let attr in params) {\n        let value = params[attr];\n        if (attr === 'html') {\n            html = value;\n            continue;\n        }\n\n        if (/^data(set)?$/.test(attr) && isPlainObject(value)) {\n\n            for (let key in value) {\n                elem.dataset[key] = value[key];\n            }\n            continue;\n        } else if (/^data(-)?\\w/.test(attr)) {\n            elem.setAttribute(toDashed(attr), value);\n            continue;\n        }\n\n        if (typeof value === 'string') {\n            elem.setAttribute(attr, value);\n        }\n        else {\n            elem[attr] = value;\n        }\n    }\n\n\n\n    if (html instanceof Element) {\n        html = [html];\n    }\n\n    if (Array.isArray(html) || html instanceof NodeList) {\n\n        html.forEach(item => {\n            if (item instanceof Element) {\n                elem.appendChild(item);\n            } else if (typeof item === 'string') {\n                elem.innerHTML += item;\n            }\n        });\n    } else if (typeof html === 'string') {\n        elem.innerHTML = html;\n    }\n    return elem;\n}\n\n\n/**\n * Generate a unique ID\n * @returns {String}\n */\nexport function uniqid() {\n\n\n    uniqid.values = uniqid.values || [];\n    let value;\n\n    while (!value || uniqid.values.includes(value)) {\n        value = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    }\n    uniqid.values.push(value);\n    return value;\n}\n\n/**\n * Clones an Object\n * @param {Object} obj\n * @returns {Object|undefined}\n */\nexport function clone(obj) {\n    if (obj instanceof Object) {\n        return Object.assign({}, obj);\n    }\n\n    return obj;\n}\n\n/**\n * Clones Object recursively\n * \n * @param {Object} obj \n * @returns \n */\nexport function cloneRecursive(obj) {\n    if (obj instanceof Object) {\n\n\n        if (isArray(obj)) {\n\n            return Array.from(obj).map(value => {\n                if (isPlainObject(value) || isArray(value)) {\n                    return cloneRecursive(value);\n                }\n                return value;\n            });\n        }\n\n        if (!isPlainObject(obj)) {\n            throw new TypeError('Invalid Object supplied.');\n        }\n\n        obj = clone(obj);\n        for (let prop in obj) {\n            if (isPlainObject(obj[prop]) || isArray(obj[prop])) {\n                obj[prop] = cloneRecursive(obj[prop]);\n            }\n        }\n\n    }\n\n    return obj;\n}\n\n/**\n * Creates a Document from html code\n * @param {string} html\n * @returns {documentElement}\n */\nexport function html2doc(html) {\n    let node = document.implementation.createHTMLDocument().documentElement;\n    if (isString(html) && html.length > 0) {\n        node.innerHTML = html;\n    }\n    return node;\n}\n\n/**\n * Creates an HTMLElement from html code\n * @param {string} html\n * @returns {HTMLElement|Text|NodeList}\n */\nexport function html2element(html) {\n    if (isString(html) && html.length > 0) {\n        let template = createElement('template', html),\n            content = template.content;\n        if (content.childNodes.length === 0) {\n            return;\n        }\n        if (content.childNodes.length > 1) {\n            return content.childNodes;\n        } else {\n            return content.childNodes[0];\n        }\n    }\n}\nexport function getUrl(url) {\n\n    if (url instanceof URL || isString(url)) {\n\n        let a = createElement('a');\n        a.href = url;\n        return a.href;\n\n    }\n}\n\nexport function loadScript(url, options) {\n    return new Promise(resolve => {\n        const params = Object.assign({\n            async: null,\n            defer: null,\n            crossorigin: null,\n            referrerpolicy: null,\n            type: null,\n        }, options ?? {});\n\n        let { async, defer, crossorigin, referrerpolicy, type } = params;\n\n        if (async !== true) {\n            async = null;\n        }\n\n        if (defer !== true) {\n            defer = null;\n        }\n\n        if (VALID_CROSSORIGIN.includes(crossorigin)) {\n            crossorigin = null;\n        }\n        if (VALID_REFERERRPOLICY.includes(referrerpolicy)) {\n            referrerpolicy = null;\n        }\n        if (type !== 'module') {\n            type = null;\n        }\n\n        if (url = getUrl(url)) {\n\n            const script = createElement('script', { src: url, onload: () => resolve(script), id: uniqid() });\n\n            for (let param in params) {\n                let value = params[param];\n                if (null !== value) {\n                    script[param] = value;\n                }\n            }\n\n\n            document.getElementsByTagName('head')[0].appendChild(script);\n        }\n\n    });\n}\n\n\nexport {\n    JSON,\n    global,\n    document,\n};\n","import EventManager from \"../helpers/event-manager.mjs\";\n\n\n\nfunction computeTime(start, elapsed = 0) {\n\n    return (+new Date() - start) + elapsed;\n}\n\n\nexport class Chronometer {\n\n    #startTime\n    #running = false\n    #elapsedTime\n    #laps = []\n\n    constructor() {\n\n        this.start();\n    }\n\n    start() {\n        if (!this.#running) {\n            this.#running = true;\n            this.#laps = [];\n            this.#elapsedTime = 0;\n            this.#startTime = +new Date();\n        }\n    }\n\n    stop() {\n        if (!this.running) {\n            return this.#elapsedTime;\n\n        }\n        this.running = false;\n        return this.#elapsedTime = computeTime(this.#startTime);\n    }\n\n\n    lap() {\n        if (!this.isStarted()) {\n            return this.#laps[this.#laps.length - 1];\n        }\n\n        let\n            prev = this.#laps[this.#laps.length - 1]?.elapsed ?? this.#startTime,\n            current = this.elapsed,\n\n            lapTime = {\n                start: this.#startTime,\n                elapsed: current,\n                time: current - prev\n            };\n\n\n\n        this.#laps.push(lapTime);\n\n        return lapTime;\n\n    }\n\n\n    isStarted() {\n        return this.#running;\n    }\n\n    get elapsed() {\n        return computeTime(this.#startTime);\n    }\n\n}\n\nexport function formatTime(ms) {\n\n    let tens, seconds;\n\n    seconds = Math.floor(ms / 1000);\n\n    tens = Math.floor((ms - (seconds * 1000)) / 10);\n\n    if (tens < 10) {\n        tens = '0' + tens;\n    }\n\n\n\n    console.debug(seconds, tens);\n\n\n\n\n\n}\n\nexport class Timer {\n\n\n\n\n\n\n\n\n\n\n}","import { Chronometer, formatTime } from \"./components/timer.mjs\";\n\n\n\n\n\n\nconst chrono = new Chronometer();\n\n\nconsole.log(chrono);\n\n\n\nsetInterval(() => {\n    formatTime(chrono.lap().elapsed);\n}, 20);\n"],"names":["global","unsafeWindow","globalThis","window","document","JSON","computeTime","start","elapsed","arguments","length","undefined","Date","_startTime","WeakMap","_running","_elapsedTime","_laps","Chronometer","_classCallCheck","_classPrivateFieldInitSpec","writable","value","_createClass","key","_classPrivateFieldGet","_classPrivateFieldSet","stop","running","lap","_classPrivateFieldGet2","_classPrivateFieldGet3","isStarted","prev","current","lapTime","time","push","get","formatTime","ms","tens","seconds","Math","floor","console","debug","chrono","log","setInterval"],"mappings":"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"}