{"version":3,"file":"bundle.js","sources":["../../src/mjs/helpers/utils.mjs","../../src/mjs/helpers/event-manager.mjs","../../src/mjs/components/timer.mjs","../../src/mjs/index.mjs"],"sourcesContent":["/* global unsafeWindow, globalThis */\n\n\nconst global = typeof unsafeWindow !== 'undefined' ? unsafeWindow : (typeof globalThis !== 'undefined' ? globalThis : window);\nconst { document, JSON } = global;\nconst RE_NUMERIC = /^-?(?:[\\d]+\\.)?\\d+$/;\n\nexport const\n    isPlainObject = (param) => param instanceof Object && Object.getPrototypeOf(param) === Object.prototype,\n    isUndef = (param) => typeof param === 'undefined',\n    isString = (param) => typeof param === 'string',\n    isNumber = (param) => typeof param === 'number',\n    isInt = (param) => Number.isInteger(param),\n    isFloat = (param) => isNumber(param) && parseFloat(param) === param,\n    isUnsigned = (param) => param >= 0 && isNumber(param),\n    isUnsignedInt = (param) => param >= 0 && isInt(param),\n    isNumeric = (param) => isInt(param) || isFloat(param) || RE_NUMERIC.test(param),\n    intVal = (param) => isNumeric(param) && parseInt(param),\n    floatVal = (param) => isNumeric(param) && parseFloat(param),\n    isBool = (param) => typeof param === 'boolean',\n    isArray = (param) => Array.isArray(param),\n    isNull = (param) => param === null,\n    isObject = (param) => typeof param === 'object' && !isNull(param),\n    isCallable = (param) => typeof param === 'function',\n    isFunction = isCallable,\n    isScalar = (param) => isNumeric(param) || isString(param) || isBool(param),\n    capitalize = (param) => isString(param) && param.split(/\\s+/).map(param => param.charAt(0).toUpperCase() + param.slice(1).toLowerCase()).join(' ');\n\nconst\n    VALID_REFERERRPOLICY = [\n        'no-referrer', 'no-referrer-when-downgrade',\n        'origin', 'origin-when-cross-origin',\n        'same-origin', 'strict-origin',\n        'strict-origin-when-cross-origin', 'unsafe-url'\n    ],\n    VALID_CROSSORIGIN = ['', 'use-credentials', 'anonymous'];\nexport function isEmpty(param) {\n\n    if (isUndef(param) || param === null) {\n        return true;\n    }\n    if (isString(param) || isArray(param)) {\n        return param.length === 0;\n    }\n    if (isNumber(param)) {\n        return param === 0;\n    }\n\n    if (isPlainObject(param)) {\n        return Object.keys(param).length === 0;\n    }\n    return false;\n}\n\nexport function runAsync(callback, ...args) {\n    if (isFunction(callback)) {\n        setTimeout(() => {\n            callback(...args);\n        }, 0);\n    }\n}\n\n/**\n * Creates an Element\n *\n * @param {string} tagName\n * @param {Object} [attributes]\n * @param {string} [innerHTML]\n * @returns {HTMLElement}\n */\nexport function createElementOld(tagName = 'div', attributes = null, innerHTML = '') {\n    if (isString(attributes)) {\n        innerHTML = attributes;\n        attributes = null;\n    }\n\n    attributes = isPlainObject(attributes) ? attributes : {};\n\n    let elem = document.createElement(tagName),\n        props = Object.keys(attributes),\n        prop;\n\n    for (let i = 0; i < props.length; i++) {\n        prop = props[i];\n        if (prop === 'html') {\n            innerHTML = attributes[prop];\n            continue;\n        }\n\n        if (/^data(set)?$/.test(prop) && isPlainObject(attributes[prop])) {\n            Object.keys(attributes[prop]).forEach((key) => {\n                elem.dataset[key] = attributes[prop][key];\n            });\n        } else if (typeof attributes[prop] !== 'string') {\n            elem[prop] = attributes[prop];\n            continue;\n        } else {\n            elem.setAttribute(prop, attributes[prop]);\n        }\n    }\n    if (innerHTML.length > 0) {\n        elem.innerHTML = innerHTML;\n    }\n\n    return elem;\n}\n\n\nfunction toDashed(name) {\n    return name.replace(/([A-Z])/g, function (u) {\n        return \"-\" + u.toLowerCase();\n    });\n}\n\n/**\n * Creates an Element\n *\n * @param {string} tagName\n * @param {Object} [params]\n * @param {string|HTMLElement|string[]|HTMLElement[]} [html]\n * @returns {HTMLElement}\n */\nexport function createElement(tag, params = null, html = '') {\n\n    if (typeof tag !== 'string') {\n        throw new TypeError('tag must be a String');\n    }\n\n\n    if (\n        typeof params === 'string' ||\n        params instanceof Element ||\n        params instanceof NodeList ||\n        Array.isArray(params)\n    ) {\n        html = params;\n        params = {};\n    }\n\n\n    params ??= {};\n    html ??= '';\n\n    const elem = document.createElement(tag);\n\n    for (let attr in params) {\n        let value = params[attr];\n        if (attr === 'html') {\n            html = value;\n            continue;\n        }\n\n        if (/^data(set)?$/.test(attr) && isPlainObject(value)) {\n\n            for (let key in value) {\n                elem.dataset[key] = value[key];\n            }\n            continue;\n        } else if (/^data(-)?\\w/.test(attr)) {\n            elem.setAttribute(toDashed(attr), value);\n            continue;\n        }\n\n        if (typeof value === 'string') {\n            elem.setAttribute(attr, value);\n        }\n        else {\n            elem[attr] = value;\n        }\n    }\n\n\n\n    if (html instanceof Element) {\n        html = [html];\n    }\n\n    if (Array.isArray(html) || html instanceof NodeList) {\n\n        html.forEach(item => {\n            if (item instanceof Element) {\n                elem.appendChild(item);\n            } else if (typeof item === 'string') {\n                elem.innerHTML += item;\n            }\n        });\n    } else if (typeof html === 'string') {\n        elem.innerHTML = html;\n    }\n    return elem;\n}\n\n\n/**\n * Generate a unique ID\n * @returns {String}\n */\nexport function uniqid() {\n\n\n    uniqid.values = uniqid.values || [];\n    let value;\n\n    while (!value || uniqid.values.includes(value)) {\n        value = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    }\n    uniqid.values.push(value);\n    return value;\n}\n\n/**\n * Clones an Object\n * @param {Object} obj\n * @returns {Object|undefined}\n */\nexport function clone(obj) {\n    if (obj instanceof Object) {\n        return Object.assign({}, obj);\n    }\n\n    return obj;\n}\n\n/**\n * Clones Object recursively\n * \n * @param {Object} obj \n * @returns \n */\nexport function cloneRecursive(obj) {\n    if (obj instanceof Object) {\n\n\n        if (isArray(obj)) {\n\n            return Array.from(obj).map(value => {\n                if (isPlainObject(value) || isArray(value)) {\n                    return cloneRecursive(value);\n                }\n                return value;\n            });\n        }\n\n        if (!isPlainObject(obj)) {\n            throw new TypeError('Invalid Object supplied.');\n        }\n\n        obj = clone(obj);\n        for (let prop in obj) {\n            if (isPlainObject(obj[prop]) || isArray(obj[prop])) {\n                obj[prop] = cloneRecursive(obj[prop]);\n            }\n        }\n\n    }\n\n    return obj;\n}\n\n/**\n * Creates a Document from html code\n * @param {string} html\n * @returns {documentElement}\n */\nexport function html2doc(html) {\n    let node = document.implementation.createHTMLDocument().documentElement;\n    if (isString(html) && html.length > 0) {\n        node.innerHTML = html;\n    }\n    return node;\n}\n\n/**\n * Creates an HTMLElement from html code\n * @param {string} html\n * @returns {HTMLElement|Text|NodeList}\n */\nexport function html2element(html) {\n    if (isString(html) && html.length > 0) {\n        let template = createElement('template', html),\n            content = template.content;\n        if (content.childNodes.length === 0) {\n            return;\n        }\n        if (content.childNodes.length > 1) {\n            return content.childNodes;\n        } else {\n            return content.childNodes[0];\n        }\n    }\n}\nexport function getUrl(url) {\n\n    if (url instanceof URL || isString(url)) {\n\n        let a = createElement('a');\n        a.href = url;\n        return a.href;\n\n    }\n}\n\nexport function loadScript(url, options) {\n    return new Promise(resolve => {\n        const params = Object.assign({\n            async: null,\n            defer: null,\n            crossorigin: null,\n            referrerpolicy: null,\n            type: null,\n        }, options ?? {});\n\n        let { async, defer, crossorigin, referrerpolicy, type } = params;\n\n        if (async !== true) {\n            async = null;\n        }\n\n        if (defer !== true) {\n            defer = null;\n        }\n\n        if (VALID_CROSSORIGIN.includes(crossorigin)) {\n            crossorigin = null;\n        }\n        if (VALID_REFERERRPOLICY.includes(referrerpolicy)) {\n            referrerpolicy = null;\n        }\n        if (type !== 'module') {\n            type = null;\n        }\n\n        if (url = getUrl(url)) {\n\n            const script = createElement('script', { src: url, onload: () => resolve(script), id: uniqid() });\n\n            for (let param in params) {\n                let value = params[param];\n                if (null !== value) {\n                    script[param] = value;\n                }\n            }\n\n\n            document.getElementsByTagName('head')[0].appendChild(script);\n        }\n\n    });\n}\n\n\nexport {\n    JSON,\n    global,\n    document,\n};\n","/**\n * A small Event manager that does not uses DOM\n */\n\n\nimport { isFunction, isString, runAsync } from \"./utils.mjs\";\n\n\n\n\nexport class EventManager {\n\n    #listeners\n    #useasync\n\n    static #events\n\n    constructor(useasync = true) {\n        this.#listeners = [];\n        this.#useasync = useasync;\n    }\n\n\n    getListenersForEvent(type) {\n\n        if (!isString(type) || type.includes(' ')) {\n            throw new TypeError('Invalid event type, not a String or contains spaces.');\n        }\n\n        return this.#listeners.filter(item => item.type === type).map(item => item.listener);\n    }\n\n\n    on(type, listener, once = false) {\n\n        if (!isString(type)) {\n            throw new TypeError('Invalid event type, not a String.');\n        }\n\n        if (!isFunction(listener)) {\n            throw new TypeError('Invalid listener, not a function');\n        }\n\n\n\n        type.split(/\\s+/).forEach(type => {\n            this.#listeners.push({\n                type, listener, once: once === true\n            });\n        });\n\n        return this;\n    }\n\n\n    one(type, listener) {\n        return this.on(type, listener, true);\n    }\n\n\n    off(type, listener) {\n\n        if (!isString(type)) {\n            throw new TypeError('Invalid event type, not a String.');\n        }\n\n        type.split(/\\s+/).forEach(type => {\n\n            this.#listeners = this.#listeners.filter(item => {\n                if (type === item.type) {\n                    if (listener === item.listener || !listener) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        });\n\n\n        return this;\n    }\n\n\n    trigger(type, data = null) {\n\n        let event;\n\n        if (type instanceof Event) {\n            event = type;\n            event.data ??= data;\n            type = event.type;\n        }\n\n        if (!isString(type) && type instanceof Event === false) {\n            throw new TypeError('Invalid event type, not a String|Event.');\n        }\n\n\n        const listeners = Array.from(this.#listeners), types = [];\n\n        type.split(/\\s+/).forEach(type => {\n\n            if (types.includes(type)) {\n                return;\n            }\n\n            types.push(type);\n\n            for (let item of listeners) {\n\n                if (item.type === type) {\n\n                    if (this.#useasync) {\n                        runAsync(item.listener, event ?? { type, data });\n\n                    } else {\n                        item.listener(event ?? { type, data });\n                    }\n\n                    if (item.once) {\n                        this.off(type, item.listener)\n                    }\n                }\n            }\n\n\n        });\n\n        return this;\n\n\n    }\n\n\n    mixin(binding) {\n\n        if (binding instanceof Object) {\n            ['on', 'off', 'one', 'trigger'].forEach(method => {\n                Object.defineProperty(binding, method, {\n                    enumerable: false, configurable: true,\n                    value: (...args) => {\n                        this[method](...args);\n                        return binding;\n                    }\n                });\n            });\n\n        }\n\n        return this;\n    }\n\n\n    static mixin(binding, useasync = true) {\n        return (new EventManager(useasync)).mixin(binding);\n    }\n\n\n    static on(type, listener, once = false) {\n        this.#events ??= new EventManager();\n        return this.#events.on(type, listener, once);\n    }\n\n    static one(type, listener) {\n        this.#events ??= new EventManager();\n        return this.#events.one(type, listener);\n    }\n\n    static off(type, listener) {\n        this.#events ??= new EventManager();\n        return this.#events.off(type, listener);\n    }\n\n    static trigger(type, data = null) {\n        this.#events ??= new EventManager();\n        return this.#events.trigger(type, data);\n    }\n\n}\n\n\nexport default EventManager\n\n","import EventManager from \"../helpers/event-manager.mjs\";\nimport { isInt } from \"../helpers/utils.mjs\";\n\n\n\n\nconst\n    MILLISECOND = 1,\n    SECOND = 1000,\n    MINUTE = 60000,\n    HOUR = 3600000,\n    DAY = 86400000;\n\nfunction computeTime(start, elapsed = 0) {\n\n    return (+new Date() - start) + elapsed;\n}\n\n\n\nexport class TimeStamp {\n\n    #ms\n\n    constructor(ms) {\n\n        if (!isInt(ms)) {\n            throw new TypeError('ms must be an integer');\n        }\n\n        this.#ms = ms;\n    }\n\n\n\n    get hours() {\n        return Math.floor(this.#ms / HOUR);\n    }\n\n    get minutes() {\n        return Math.floor(this.#ms / MINUTE);\n    }\n\n\n\n    get seconds() {\n        return Math.floor(this.#ms / SECOND);\n    }\n\n\n    get miliseconds() {\n        return this.#ms;\n    }\n\n\n    export() {\n\n\n\n        let values = {\n            hours: HOUR,\n            minutes: MINUTE,\n            seconds: SECOND,\n            miliseconds: MILLISECOND\n        }, remaining = this.#ms, result = {};\n\n\n\n        for (let key in values) {\n\n            let\n                divider = values[key],\n                floor = Math.floor(remaining / divider);\n            remaining -= floor * divider;\n            result[key] = floor;\n        }\n\n        return result;\n    }\n\n\n    toString() {\n\n        return formatTime(this.#ms);\n    }\n\n\n\n}\n\n\n\n\nexport class Chronometer {\n\n    #startTime = 0\n    #running = false\n    #paused = false\n    #elapsedTime = 0\n    #laps = []\n\n    constructor(autostart = true) {\n\n        if (autostart) {\n            this.start();\n        }\n    }\n\n    start() {\n        if (!this.#running) {\n            this.#running = true;\n            this.#laps = [];\n            this.#elapsedTime = 0;\n            this.#startTime = +new Date();\n        }\n    }\n\n    stop() {\n        if (!this.#running) {\n            return this.#elapsedTime ?? 0;\n        }\n        this.#running = false;\n        return this.#elapsedTime = computeTime(this.#startTime);\n    }\n\n\n    pause() {\n\n        this.#paused = true;\n\n        if (!this.#running) {\n            return this.#elapsedTime;\n        }\n\n        return this.stop();\n\n    }\n\n\n    resume() {\n\n        if (!this.#paused) {\n            return;\n        }\n\n\n        this.#paused = false;\n        this.#startTime = computeTime(this.#elapsedTime);\n        this.#running = true;\n\n    }\n\n\n    lap() {\n        if (!this.isStarted()) {\n            return this.#laps[this.#laps.length - 1];\n        }\n\n        let\n            prev = this.#laps[this.#laps.length - 1]?.elapsed ?? this.#startTime,\n            current = this.elapsed,\n\n            lapTime = {\n                start: this.#startTime,\n                elapsed: current,\n                time: current - prev\n            };\n\n        this.#laps.push(lapTime);\n\n        return lapTime;\n\n    }\n\n\n    isStarted() {\n        return this.#running;\n    }\n\n    isPaused() {\n        return this.isStarted() && this.#paused;\n    }\n\n    get elapsed() {\n\n        if (this.isStarted) {\n            return computeTime(this.#startTime);\n        }\n        return this.#elapsedTime;\n\n    }\n\n}\n\nexport function formatTime(ms) {\n    let { hours, minutes, seconds, miliseconds } = (new TimeStamp(ms)).export(), result = '';\n\n\n    if (hours < 10) {\n        result += '0';\n    }\n\n    result += hours + ':';\n\n    if (minutes < 10) {\n        result += '0';\n    }\n\n    result += minutes + ':';\n\n    if (seconds < 10) {\n        result += '0';\n    }\n    result += seconds + ',';\n\n    if (miliseconds < 100) {\n        result += '0';\n    }\n    if (miliseconds < 10) {\n        result += '0';\n    }\n    result += miliseconds;\n    return result;\n\n}\n\nexport class Timer {\n\n    #duration\n    #ticks\n    #chrono\n    #timeout\n    #interval\n\n    get started() {\n        return this.#chrono.isStarted();\n    }\n\n    get paused() {\n        return this.#chrono.isPaused();\n    }\n\n\n    get elapsed() {\n        return this.#chrono.elapsed;\n    }\n\n\n    constructor(duration = MINUTE, ticks = 500) {\n\n        if (!isInt(duration)) {\n            throw new TypeError('duration must be an integer');\n\n        }\n        if (!isInt(ticks)) {\n            throw new TypeError('ticks must be an integer');\n\n        }\n\n\n        this.#duration = duration;\n        this.#ticks = ticks;\n\n        this.#chrono = new Chronometer(false);\n        EventManager.mixin(this);\n\n        this.on('ended', () => {\n            this.stop();\n        });\n\n\n    }\n\n\n    start() {\n\n        if (this.started) {\n            return;\n        }\n\n        this.#timeout = setTimeout(() => {\n            this.trigger('ended');\n        }, this.#duration);\n\n        this.#interval = setInterval(() => {\n            this.trigger('tick', {\n                chrono: this.#chrono,\n                timer: this\n            });\n        }, this.#ticks);\n\n\n\n        this.trigger('started');\n\n        this.#chrono.start();\n    }\n\n    stop() {\n\n        if (!this.started) {\n            return this.#chrono.stop();\n        }\n\n        clearTimeout(this.#timeout);\n\n        clearInterval(this.#interval);\n        this.trigger('stopped');\n        return this.#chrono.stop();\n\n    }\n\n\n    pause() {\n\n        if (this.paused || !this.started) {\n            return this.elapsed;\n        }\n\n        clearTimeout(this.#timeout);\n\n        clearInterval(this.#interval);\n        this.trigger('paused');\n        return this.#chrono.pause();\n    }\n\n\n    resume() {\n\n        if (!this.paused) {\n            return;\n        }\n\n        let timeout = this.#duration - this.elapsed;\n\n\n        this.#interval = setInterval(() => {\n            this.trigger('tick', {\n                chrono: this.#chrono,\n                timer: this\n            });\n        }, this.#ticks);\n\n        this.#timeout = setTimeout(() => {\n            this.trigger('ended');\n        }, timeout);\n    }\n\n}","import { Chronometer, TimeStamp, Timer, formatTime } from \"./components/timer.mjs\";\n\n\n\n\n\nconst timer = new Timer(2000);\n\n\ntimer.on('tick', e => {\n\n    const { chrono } = e.data;\n\n\n    console.debug((new TimeStamp(chrono.elapsed)).toString());\n\n});\ntimer.on('ended', e => {\n    alert('GAME OVER');\n});\n\n\ntimer.start();"],"names":["global","unsafeWindow","globalThis","window","document","JSON","isString","param","isNumber","isInt","Number","isInteger","isFloat","isCallable","isFunction","runAsync","callback","_len","arguments","length","args","Array","_key","setTimeout","apply","_listeners","WeakMap","_useasync","EventManager","useasync","undefined","_classCallCheck","_classPrivateFieldInitSpec","writable","value","_classPrivateFieldSet","_createClass","key","getListenersForEvent","type","includes","TypeError","_classPrivateFieldGet","filter","item","map","listener","on","_this","once","split","forEach","push","one","off","_this2","trigger","_this3","data","event","Event","_event","_event$data","listeners","from","types","_i","_listeners2","_event2","_event3","mixin","binding","_this4","Object","method","defineProperty","enumerable","configurable","_classStaticPrivateFi","_classStaticPrivateFieldSpecGet","_events","_classStaticPrivateFieldSpecSet","_classStaticPrivateFi2","_classStaticPrivateFi3","_classStaticPrivateFi4","MILLISECOND","SECOND","MINUTE","HOUR","computeTime","start","elapsed","Date","_ms","TimeStamp","ms","get","Math","floor","_export","values","hours","minutes","seconds","miliseconds","remaining","result","divider","toString","formatTime","_startTime","_running","_paused","_elapsedTime","_laps","Chronometer","autostart","stop","_classPrivateFieldGet2","pause","resume","lap","_classPrivateFieldGet3","_classPrivateFieldGet4","isStarted","prev","current","lapTime","time","isPaused","_TimeStamp$export","export","_duration","_ticks","_chrono","_timeout","_interval","Timer","duration","ticks","started","setInterval","chrono","timer","clearTimeout","clearInterval","paused","timeout","e","console","debug","alert"],"mappings":"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"}