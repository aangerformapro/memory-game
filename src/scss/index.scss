@use './helpers' as *;


$theme1: #F27059;
$theme2: #A4C2A8;
$theme3: #BFACB5;
$theme4: #E5D0CC;


body {
    font-family: 'Nova Square', cursive, sans-serif;
}

.disabled {
    pointer-events: none !important;

}


header {
    height: 60px;
}

#app {
    width: 100vw;
    //  max-width: 1024px;
    margin: 0 auto;
    height: calc(100vh - 60px);

    overflow: hidden;

    @include lg {
        //width: 80vw;
    }
}

.memory-game-area {
    cursor: pointer;
    position: relative;
    margin: auto;

    perspective: 1000px;
    height: calc(100vh - 190px);


    .card-area {
        width: 100%;
        height: 100%;
        display: flex;
        flex-wrap: wrap;
        margin: 0 auto;
    }

    .memory-card {
        background: #1C7CCC;
    }


    .card-label {
        font-size: .875rem;
    }

    &[data-grid="2"] {
        .memory-card {
            font-size: 6rem;
            width: calc(50% - 10px);
            height: calc(50% - 10px);
        }
    }

    &[data-grid="4"] {
        .memory-card {
            font-size: 5rem;
            width: calc(25% - 10px);
            height: calc(25% - 10px);
        }
    }

    &[data-grid="6"] {
        .memory-card {
            font-size: 3rem;
            width: calc(16.66% - 10px);
            height: calc(16.66% - 10px);

            .card-label {
                font-size: .675rem;
            }
        }
    }

    &[data-grid="8"] {
        .memory-card {
            font-size: 2.5rem;
            width: calc(12.5% - 10px);
            height: calc(12.5% - 10px);

            .front-face {
                justify-content: center;
            }

            .card-label {
                display: none;
            }

            @include md-down {
                font-size: 1.5rem;


            }
        }
    }




    &.complete::before,
    &.gameover::before,
    &.paused::before {
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 3;
        content: '';


    }

    &.complete::after,
    &.gameover::after,
    &.paused::after {
        z-index: 4;
        position: absolute;

        left: 10%;
        width: 80%;
        top: 40%;
        height: 20%;
        text-align: center;
        display: flex;
        flex-direction: column;
        justify-content: center;
        border-radius: 8px;
        border: 1px dashed rgba(0, 0, 0, .3);
        text-transform: uppercase;
        cursor: pointer;
        box-shadow: 5px 5px 5px rgba(0, 0, 0, .3);

        color: rgba(var(--bs-light-rgb), 1);

    }

    &.gameover::before {
        background-color: rgba(var(--bs-danger-rgb), .3);
    }


    &.gameover::after {
        content: 'game over';
        background-color: rgba(var(--bs-danger-rgb), 1);

    }

    &.complete::before {
        background-color: rgba(var(--bs-success-rgb), .3);

    }


    &.complete::after {
        content: 'nouvelle partie';
        background-color: rgba(var(--bs-success-rgb), 1);
    }

    &.paused::before {
        background-color: rgba(var(--bs-info-rgb), .3);
    }

    &.paused::after {
        content: 'pause';
        background-color: rgba(var(--bs-info-rgb), 1);
    }


    &.gameover,
    &.complete,
    &.paused {
        pointer-events: auto !important;
        cursor: pointer;
    }

    &.failed:not(.paused) {
        .card-area {
            animation: deckBlinkRed .25s ease-in-out infinite;
        }

    }
}

.memory-card {



    margin: 5px;
    position: relative;

    position: relative;
    transform: scale(1);
    transform-style: preserve-3d;
    transition: transform .5s;
    box-shadow: 1px 1px 1px rgba(0, 0, 0, .3);

    border-radius: 5px;


    &:active {
        transform: scale(0.97);
        transition: transform .2s;
    }

    &.flip {
        transform: rotateY(180deg);
    }


    .front-face,
    .back-face {
        width: 100%;
        height: 100%;
        // padding: 20px;
        position: absolute;
        border-radius: 5px;
        backface-visibility: hidden;
        overflow: hidden;
        z-index: 1;
    }


    .front-face {
        transform: rotateY(180deg);

        background-color: #ddd;

        display: flex;

        flex-direction: column;
        justify-content: space-between;
        align-items: center;


    }

    &.matched {
        box-shadow: none;

        &::after {
            z-index: 2;
            animation: cardFadeOut .8s ease-in-out .5s reverse both;
            position: absolute;
            top: 0;
            left: -5px;
            right: -5px;
            bottom: 0;
            background-color: var(--bs-body-bg);
            content: '';
        }
    }

}



.theme-selector {
    .color-picker {
        [type="radio"] {
            display: none;
        }

        label {
            display: inline-block;
            width: 32px;
            height: 32px;
            border-radius: 50%;
            border: 3px solid transparent;
            outline: 1px solid rgba(0, 0, 0, .3);
            position: relative;
            cursor: pointer;

        }

        :checked~label {
            border-color: rgba(0, 0, 0, .3);

            &::after {
                content: '✓';
                font-size: 1.5rem;
                font-weight: 700;
                color: var(--bs-gray);
                display: flex;
                align-items: center;
                justify-content: center;
                width: 100%;
                height: 100%;
                position: absolute;
                top: 0;
                left: 0;
            }

        }
    }
}




[data-theme="1"] .memory-card,
[for="theme1"] {
    background: $theme1;
}

[data-theme="2"] .memory-card,
[for="theme2"] {
    background: $theme2;
}

[data-theme="3"] .memory-card,
[for="theme3"] {
    background: $theme3;
}

[data-theme="4"] .memory-card,
[for="theme4"] {
    background: $theme4;
}

@keyframes deckBlinkRed {

    0% {
        background-color: transparent;
    }

    25% {
        background-color: rgba(var(--bs-danger-rgb), 1);
    }

    95% {
        background-color: transparent;
    }


}



@keyframes cardFadeOut {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

[data-play="play"] [data-play="paused"],
[data-play="paused"] [data-play="play"],
[data-play="stopped"] {
    display: none;
}

[data-after]:after {
    content: attr(data-after);
}


[data-before]:before {
    content: attr(data-before);
}

.time {

    user-select: none;
    width: 80px;


    .hours:empty,
    .minutes:empty {
        margin: 0;
    }

    .seconds:empty::after {
        content: '∞';
    }

    .hours:not(:empty)+.minutes::before,
    .minutes:not(:empty)+.seconds::before {
        content: ':';
        display: inline-block;
        margin: 0 2px;
    }

}


.game-stats {

    td:not([colspan]),
    th {
        width: calc(20% - 2px);
    }
}